{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport React$1, { PureComponent, createRef } from 'react';\nimport debounce$1 from 'lodash/debounce';\nimport { EventListener as EventListener$1 } from '../EventListener/EventListener.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { durationBase } from '@shopify/polaris-tokens';\nimport { classNames } from '../../utilities/css.js';\nimport { Popover as Popover$1 } from '../Popover/Popover.js';\nimport { ActionList as ActionList$1 } from '../ActionList/ActionList.js';\nimport { Button as Button$1 } from '../Button/Button.js';\nimport { ButtonGroup as ButtonGroup$1 } from '../ButtonGroup/ButtonGroup.js';\nimport { Transition, CSSTransition } from 'react-transition-group';\nimport { clamp as clamp$1 } from '../../utilities/clamp.js';\nimport { CheckableButton as CheckableButton$1 } from '../CheckableButton/CheckableButton.js';\nimport styles from './BulkActions.scss.js';\nimport { BulkActionButton as BulkActionButton$1 } from './components/BulkActionButton/BulkActionButton.js';\nvar MAX_PROMOTED_ACTIONS = 2;\nvar slideClasses = {\n  appear: classNames(styles.Slide, styles['Slide-appear']),\n  appearActive: classNames(styles.Slide, styles['Slide-appearing']),\n  enter: classNames(styles.Slide, styles['Slide-enter']),\n  enterActive: classNames(styles.Slide, styles['Slide-entering']),\n  exit: classNames(styles.Slide, styles['Slide-exit'])\n};\n\nvar BulkActionsInner = /*#__PURE__*/function (_PureComponent) {\n  _inherits(BulkActionsInner, _PureComponent);\n\n  var _super = _createSuper(BulkActionsInner);\n\n  function BulkActionsInner() {\n    var _this;\n\n    _classCallCheck(this, BulkActionsInner);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      smallScreenPopoverVisible: false,\n      largeScreenPopoverVisible: false,\n      containerWidth: 0,\n      measuring: true\n    };\n    _this.containerNode = null;\n    _this.largeScreenButtonsNode = null;\n    _this.moreActionsNode = null;\n    _this.checkableWrapperNode = /*#__PURE__*/createRef();\n    _this.largeScreenGroupNode = /*#__PURE__*/createRef();\n    _this.smallScreenGroupNode = /*#__PURE__*/createRef();\n    _this.promotedActionsWidths = [];\n    _this.bulkActionsWidth = 0;\n    _this.addedMoreActionsWidthForMeasuring = 0;\n    _this.handleResize = debounce$1(function () {\n      var _this$state = _this.state,\n          smallScreenPopoverVisible = _this$state.smallScreenPopoverVisible,\n          largeScreenPopoverVisible = _this$state.largeScreenPopoverVisible;\n\n      if (_this.containerNode) {\n        var containerWidth = _this.containerNode.getBoundingClientRect().width;\n\n        if (containerWidth > 0) {\n          _this.setState({\n            containerWidth: containerWidth\n          });\n        }\n      }\n\n      if (smallScreenPopoverVisible || largeScreenPopoverVisible) {\n        _this.setState({\n          smallScreenPopoverVisible: false,\n          largeScreenPopoverVisible: false\n        });\n      }\n    }, 50, {\n      trailing: true\n    });\n\n    _this.setLargeScreenButtonsNode = function (node) {\n      _this.largeScreenButtonsNode = node;\n    };\n\n    _this.setContainerNode = function (node) {\n      _this.containerNode = node;\n    };\n\n    _this.setMoreActionsNode = function (node) {\n      _this.moreActionsNode = node;\n    };\n\n    _this.setSelectMode = function (val) {\n      var onSelectModeToggle = _this.props.onSelectModeToggle;\n\n      if (onSelectModeToggle) {\n        onSelectModeToggle(val);\n      }\n    };\n\n    _this.toggleSmallScreenPopover = function () {\n      if (_this.props.onMoreActionPopoverToggle) {\n        _this.props.onMoreActionPopoverToggle(_this.state.smallScreenPopoverVisible);\n      }\n\n      _this.setState(function (_ref) {\n        var smallScreenPopoverVisible = _ref.smallScreenPopoverVisible;\n        return {\n          smallScreenPopoverVisible: !smallScreenPopoverVisible\n        };\n      });\n    };\n\n    _this.toggleLargeScreenPopover = function () {\n      if (_this.props.onMoreActionPopoverToggle) {\n        _this.props.onMoreActionPopoverToggle(_this.state.largeScreenPopoverVisible);\n      }\n\n      _this.setState(function (_ref2) {\n        var largeScreenPopoverVisible = _ref2.largeScreenPopoverVisible;\n        return {\n          largeScreenPopoverVisible: !largeScreenPopoverVisible\n        };\n      });\n    };\n\n    _this.handleMeasurement = function (width) {\n      var measuring = _this.state.measuring;\n\n      if (measuring) {\n        _this.promotedActionsWidths.push(width);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(BulkActionsInner, [{\n    key: \"numberOfPromotedActionsToRender\",\n    value: function numberOfPromotedActionsToRender() {\n      var promotedActions = this.props.promotedActions;\n      var _this$state2 = this.state,\n          containerWidth = _this$state2.containerWidth,\n          measuring = _this$state2.measuring;\n\n      if (!promotedActions) {\n        return 0;\n      }\n\n      if (containerWidth >= this.bulkActionsWidth || measuring) {\n        return promotedActions.length;\n      }\n\n      var sufficientSpace = false;\n      var counter = promotedActions.length - 1;\n      var totalWidth = 0;\n\n      while (!sufficientSpace && counter >= 0) {\n        totalWidth += this.promotedActionsWidths[counter];\n        var widthWithRemovedAction = this.bulkActionsWidth - totalWidth + this.addedMoreActionsWidthForMeasuring;\n\n        if (containerWidth >= widthWithRemovedAction) {\n          sufficientSpace = true;\n        } else {\n          counter--;\n        }\n      }\n\n      return clamp$1(counter, 0, promotedActions.length);\n    }\n  }, {\n    key: \"hasActions\",\n    value: function hasActions() {\n      var _this$props = this.props,\n          promotedActions = _this$props.promotedActions,\n          actions = _this$props.actions;\n      return Boolean(promotedActions && promotedActions.length > 0 || actions && actions.length > 0);\n    }\n  }, {\n    key: \"actionSections\",\n    value: function actionSections() {\n      var actions = this.props.actions;\n\n      if (!actions || actions.length === 0) {\n        return;\n      }\n\n      if (instanceOfBulkActionListSectionArray(actions)) {\n        return actions;\n      }\n\n      if (instanceOfBulkActionArray(actions)) {\n        return [{\n          items: actions\n        }];\n      }\n    } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          actions = _this$props2.actions,\n          promotedActions = _this$props2.promotedActions;\n\n      if (promotedActions && !actions && this.moreActionsNode) {\n        this.addedMoreActionsWidthForMeasuring = this.moreActionsNode.getBoundingClientRect().width;\n      }\n\n      this.bulkActionsWidth = this.largeScreenButtonsNode ? this.largeScreenButtonsNode.getBoundingClientRect().width - this.addedMoreActionsWidthForMeasuring : 0;\n\n      if (this.containerNode) {\n        this.setState({\n          containerWidth: this.containerNode.getBoundingClientRect().width,\n          measuring: false\n        });\n      }\n    } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          selectMode = _this$props3.selectMode,\n          accessibilityLabel = _this$props3.accessibilityLabel,\n          _this$props3$label = _this$props3.label,\n          label = _this$props3$label === void 0 ? '' : _this$props3$label,\n          onToggleAll = _this$props3.onToggleAll,\n          selected = _this$props3.selected,\n          smallScreen = _this$props3.smallScreen,\n          disabled = _this$props3.disabled,\n          promotedActions = _this$props3.promotedActions,\n          _this$props3$paginate = _this$props3.paginatedSelectAllText,\n          paginatedSelectAllText = _this$props3$paginate === void 0 ? null : _this$props3$paginate,\n          paginatedSelectAllAction = _this$props3.paginatedSelectAllAction,\n          i18n = _this$props3.i18n;\n      var actionSections = this.actionSections();\n\n      if (promotedActions && promotedActions.length > MAX_PROMOTED_ACTIONS) {\n        // eslint-disable-next-line no-console\n        console.warn(i18n.translate('Polaris.ResourceList.BulkActions.warningMessage', {\n          maxPromotedActions: MAX_PROMOTED_ACTIONS\n        }));\n      }\n\n      var _this$state3 = this.state,\n          smallScreenPopoverVisible = _this$state3.smallScreenPopoverVisible,\n          largeScreenPopoverVisible = _this$state3.largeScreenPopoverVisible,\n          measuring = _this$state3.measuring;\n      var paginatedSelectAllActionMarkup = paginatedSelectAllAction ? /*#__PURE__*/React$1.createElement(Button$1, {\n        onClick: paginatedSelectAllAction.onAction,\n        plain: true,\n        disabled: disabled\n      }, paginatedSelectAllAction.content) : null;\n      var paginatedSelectAllTextMarkup = paginatedSelectAllText && paginatedSelectAllAction ? /*#__PURE__*/React$1.createElement(\"span\", {\n        \"aria-live\": \"polite\"\n      }, paginatedSelectAllText) : paginatedSelectAllText;\n      var paginatedSelectAllMarkup = paginatedSelectAllActionMarkup || paginatedSelectAllTextMarkup ? /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.PaginatedSelectAll\n      }, paginatedSelectAllTextMarkup, \" \", paginatedSelectAllActionMarkup) : null;\n      var cancelButton = /*#__PURE__*/React$1.createElement(Button$1, {\n        onClick: this.setSelectMode.bind(this, false),\n        disabled: disabled\n      }, i18n.translate('Polaris.Common.cancel'));\n      var numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n      var allActionsPopover = this.hasActions() ? /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.Popover,\n        ref: this.setMoreActionsNode\n      }, /*#__PURE__*/React$1.createElement(Popover$1, {\n        active: smallScreenPopoverVisible,\n        activator: /*#__PURE__*/React$1.createElement(BulkActionButton$1, {\n          disclosure: true,\n          onAction: this.toggleSmallScreenPopover,\n          content: i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel'),\n          disabled: disabled,\n          indicator: this.isNewBadgeInBadgeActions()\n        }),\n        onClose: this.toggleSmallScreenPopover\n      }, /*#__PURE__*/React$1.createElement(ActionList$1, {\n        items: promotedActions,\n        sections: actionSections,\n        onActionAnyItem: this.toggleSmallScreenPopover\n      }))) : null;\n      var promotedActionsMarkup = promotedActions && numberOfPromotedActionsToRender > 0 ? _toConsumableArray(promotedActions).slice(0, numberOfPromotedActionsToRender).map(function (action, index) {\n        return /*#__PURE__*/React$1.createElement(BulkActionButton$1, Object.assign({\n          disabled: disabled\n        }, action, {\n          key: index,\n          handleMeasurement: _this2.handleMeasurement\n        }));\n      }) : null;\n      var rolledInPromotedActions = promotedActions && numberOfPromotedActionsToRender < promotedActions.length ? _toConsumableArray(promotedActions).slice(numberOfPromotedActionsToRender) : [];\n      var activatorLabel = !promotedActions || promotedActions && numberOfPromotedActionsToRender === 0 && !measuring ? i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel') : i18n.translate('Polaris.ResourceList.BulkActions.moreActionsActivatorLabel');\n      var combinedActions = [];\n\n      if (actionSections && rolledInPromotedActions.length > 0) {\n        combinedActions = [{\n          items: rolledInPromotedActions\n        }].concat(_toConsumableArray(actionSections));\n      } else if (actionSections) {\n        combinedActions = actionSections;\n      } else if (rolledInPromotedActions.length > 0) {\n        combinedActions = [{\n          items: rolledInPromotedActions\n        }];\n      }\n\n      var actionsPopover = actionSections || rolledInPromotedActions.length > 0 || measuring ? /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.Popover,\n        ref: this.setMoreActionsNode\n      }, /*#__PURE__*/React$1.createElement(Popover$1, {\n        active: largeScreenPopoverVisible,\n        activator: /*#__PURE__*/React$1.createElement(BulkActionButton$1, {\n          disclosure: true,\n          onAction: this.toggleLargeScreenPopover,\n          content: activatorLabel,\n          disabled: disabled,\n          indicator: this.isNewBadgeInBadgeActions()\n        }),\n        onClose: this.toggleLargeScreenPopover\n      }, /*#__PURE__*/React$1.createElement(ActionList$1, {\n        sections: combinedActions,\n        onActionAnyItem: this.toggleLargeScreenPopover\n      }))) : null;\n      var checkableButtonProps = {\n        accessibilityLabel: accessibilityLabel,\n        label: label,\n        selected: selected,\n        selectMode: selectMode,\n        onToggleAll: onToggleAll,\n        measuring: measuring,\n        disabled: disabled\n      };\n      var smallScreenGroup = smallScreen ? /*#__PURE__*/React$1.createElement(Transition, {\n        timeout: 0,\n        in: selectMode,\n        key: \"smallGroup\",\n        nodeRef: this.smallScreenGroupNode\n      }, function (status) {\n        var smallScreenGroupClassName = classNames(styles.Group, styles['Group-smallScreen'], styles[\"Group-\".concat(status)]);\n        return /*#__PURE__*/React$1.createElement(\"div\", {\n          className: smallScreenGroupClassName,\n          ref: _this2.smallScreenGroupNode\n        }, /*#__PURE__*/React$1.createElement(\"div\", {\n          className: styles.ButtonGroupWrapper\n        }, /*#__PURE__*/React$1.createElement(ButtonGroup$1, {\n          segmented: true\n        }, /*#__PURE__*/React$1.createElement(CSSTransition, {\n          nodeRef: _this2.checkableWrapperNode,\n          in: selectMode,\n          timeout: durationBase,\n          classNames: slideClasses,\n          appear: !selectMode\n        }, /*#__PURE__*/React$1.createElement(\"div\", {\n          className: styles.CheckableContainer,\n          ref: _this2.checkableWrapperNode\n        }, /*#__PURE__*/React$1.createElement(CheckableButton$1, Object.assign({}, checkableButtonProps, {\n          smallScreen: true\n        })))), allActionsPopover, cancelButton)), paginatedSelectAllMarkup);\n      }) : null;\n      var largeGroupContent = promotedActionsMarkup || actionsPopover ? /*#__PURE__*/React$1.createElement(ButtonGroup$1, {\n        segmented: true\n      }, /*#__PURE__*/React$1.createElement(CheckableButton$1, checkableButtonProps), promotedActionsMarkup, actionsPopover) : /*#__PURE__*/React$1.createElement(CheckableButton$1, checkableButtonProps);\n      var largeScreenGroup = smallScreen ? null : /*#__PURE__*/React$1.createElement(Transition, {\n        timeout: 0,\n        in: selectMode,\n        key: \"largeGroup\",\n        nodeRef: this.largeScreenGroupNode\n      }, function (status) {\n        var largeScreenGroupClassName = classNames(styles.Group, styles['Group-largeScreen'], !measuring && styles[\"Group-\".concat(status)], measuring && styles['Group-measuring']);\n        return /*#__PURE__*/React$1.createElement(\"div\", {\n          className: largeScreenGroupClassName,\n          ref: _this2.largeScreenGroupNode\n        }, /*#__PURE__*/React$1.createElement(EventListener$1, {\n          event: \"resize\",\n          handler: _this2.handleResize\n        }), /*#__PURE__*/React$1.createElement(\"div\", {\n          className: styles.ButtonGroupWrapper,\n          ref: _this2.setLargeScreenButtonsNode\n        }, largeGroupContent), paginatedSelectAllMarkup);\n      });\n      return /*#__PURE__*/React$1.createElement(\"div\", {\n        ref: this.setContainerNode\n      }, smallScreenGroup, largeScreenGroup);\n    }\n  }, {\n    key: \"isNewBadgeInBadgeActions\",\n    value: function isNewBadgeInBadgeActions() {\n      var actions = this.actionSections();\n      if (!actions) return false;\n\n      var _iterator = _createForOfIteratorHelper(actions),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var action = _step.value;\n\n          var _iterator2 = _createForOfIteratorHelper(action.items),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var item = _step2.value;\n\n              var _item$badge;\n\n              if (((_item$badge = item.badge) == null ? void 0 : _item$badge.status) === 'new') return true;\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return false;\n    }\n  }]);\n\n  return BulkActionsInner;\n}(PureComponent);\n\nfunction instanceOfBulkActionListSectionArray(actions) {\n  var validList = actions.filter(function (action) {\n    return action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction instanceOfBulkActionArray(actions) {\n  var validList = actions.filter(function (action) {\n    return !action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction BulkActions(props) {\n  var i18n = useI18n();\n  return /*#__PURE__*/React$1.createElement(BulkActionsInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { BulkActions };","map":{"version":3,"sources":["/home/hoangdev/Desktop/front.test/node_modules/@shopify/polaris/dist/esm/components/BulkActions/BulkActions.js"],"names":["React$1","PureComponent","createRef","debounce$1","EventListener","EventListener$1","useI18n","durationBase","classNames","Popover","Popover$1","ActionList","ActionList$1","Button","Button$1","ButtonGroup","ButtonGroup$1","Transition","CSSTransition","clamp","clamp$1","CheckableButton","CheckableButton$1","styles","BulkActionButton","BulkActionButton$1","MAX_PROMOTED_ACTIONS","slideClasses","appear","Slide","appearActive","enter","enterActive","exit","BulkActionsInner","args","state","smallScreenPopoverVisible","largeScreenPopoverVisible","containerWidth","measuring","containerNode","largeScreenButtonsNode","moreActionsNode","checkableWrapperNode","largeScreenGroupNode","smallScreenGroupNode","promotedActionsWidths","bulkActionsWidth","addedMoreActionsWidthForMeasuring","handleResize","getBoundingClientRect","width","setState","trailing","setLargeScreenButtonsNode","node","setContainerNode","setMoreActionsNode","setSelectMode","val","onSelectModeToggle","props","toggleSmallScreenPopover","onMoreActionPopoverToggle","toggleLargeScreenPopover","handleMeasurement","push","promotedActions","length","sufficientSpace","counter","totalWidth","widthWithRemovedAction","actions","Boolean","instanceOfBulkActionListSectionArray","instanceOfBulkActionArray","items","selectMode","accessibilityLabel","label","onToggleAll","selected","smallScreen","disabled","paginatedSelectAllText","paginatedSelectAllAction","i18n","actionSections","console","warn","translate","maxPromotedActions","paginatedSelectAllActionMarkup","createElement","onClick","onAction","plain","content","paginatedSelectAllTextMarkup","paginatedSelectAllMarkup","className","PaginatedSelectAll","cancelButton","bind","numberOfPromotedActionsToRender","allActionsPopover","hasActions","ref","active","activator","disclosure","indicator","isNewBadgeInBadgeActions","onClose","sections","onActionAnyItem","promotedActionsMarkup","slice","map","action","index","Object","assign","key","rolledInPromotedActions","activatorLabel","combinedActions","actionsPopover","checkableButtonProps","smallScreenGroup","timeout","in","nodeRef","status","smallScreenGroupClassName","Group","ButtonGroupWrapper","segmented","CheckableContainer","largeGroupContent","largeScreenGroup","largeScreenGroupClassName","event","handler","item","_item$badge","badge","validList","filter","BulkActions"],"mappings":"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","sourcesContent":["import React$1, { PureComponent, createRef } from 'react';\nimport debounce$1 from 'lodash/debounce';\nimport { EventListener as EventListener$1 } from '../EventListener/EventListener.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { durationBase } from '@shopify/polaris-tokens';\nimport { classNames } from '../../utilities/css.js';\nimport { Popover as Popover$1 } from '../Popover/Popover.js';\nimport { ActionList as ActionList$1 } from '../ActionList/ActionList.js';\nimport { Button as Button$1 } from '../Button/Button.js';\nimport { ButtonGroup as ButtonGroup$1 } from '../ButtonGroup/ButtonGroup.js';\nimport { Transition, CSSTransition } from 'react-transition-group';\nimport { clamp as clamp$1 } from '../../utilities/clamp.js';\nimport { CheckableButton as CheckableButton$1 } from '../CheckableButton/CheckableButton.js';\nimport styles from './BulkActions.scss.js';\nimport { BulkActionButton as BulkActionButton$1 } from './components/BulkActionButton/BulkActionButton.js';\n\nconst MAX_PROMOTED_ACTIONS = 2;\nconst slideClasses = {\n  appear: classNames(styles.Slide, styles['Slide-appear']),\n  appearActive: classNames(styles.Slide, styles['Slide-appearing']),\n  enter: classNames(styles.Slide, styles['Slide-enter']),\n  enterActive: classNames(styles.Slide, styles['Slide-entering']),\n  exit: classNames(styles.Slide, styles['Slide-exit'])\n};\n\nclass BulkActionsInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      smallScreenPopoverVisible: false,\n      largeScreenPopoverVisible: false,\n      containerWidth: 0,\n      measuring: true\n    };\n    this.containerNode = null;\n    this.largeScreenButtonsNode = null;\n    this.moreActionsNode = null;\n    this.checkableWrapperNode = /*#__PURE__*/createRef();\n    this.largeScreenGroupNode = /*#__PURE__*/createRef();\n    this.smallScreenGroupNode = /*#__PURE__*/createRef();\n    this.promotedActionsWidths = [];\n    this.bulkActionsWidth = 0;\n    this.addedMoreActionsWidthForMeasuring = 0;\n    this.handleResize = debounce$1(() => {\n      const {\n        smallScreenPopoverVisible,\n        largeScreenPopoverVisible\n      } = this.state;\n\n      if (this.containerNode) {\n        const containerWidth = this.containerNode.getBoundingClientRect().width;\n\n        if (containerWidth > 0) {\n          this.setState({\n            containerWidth\n          });\n        }\n      }\n\n      if (smallScreenPopoverVisible || largeScreenPopoverVisible) {\n        this.setState({\n          smallScreenPopoverVisible: false,\n          largeScreenPopoverVisible: false\n        });\n      }\n    }, 50, {\n      trailing: true\n    });\n\n    this.setLargeScreenButtonsNode = node => {\n      this.largeScreenButtonsNode = node;\n    };\n\n    this.setContainerNode = node => {\n      this.containerNode = node;\n    };\n\n    this.setMoreActionsNode = node => {\n      this.moreActionsNode = node;\n    };\n\n    this.setSelectMode = val => {\n      const {\n        onSelectModeToggle\n      } = this.props;\n\n      if (onSelectModeToggle) {\n        onSelectModeToggle(val);\n      }\n    };\n\n    this.toggleSmallScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.smallScreenPopoverVisible);\n      }\n\n      this.setState(({\n        smallScreenPopoverVisible\n      }) => ({\n        smallScreenPopoverVisible: !smallScreenPopoverVisible\n      }));\n    };\n\n    this.toggleLargeScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.largeScreenPopoverVisible);\n      }\n\n      this.setState(({\n        largeScreenPopoverVisible\n      }) => ({\n        largeScreenPopoverVisible: !largeScreenPopoverVisible\n      }));\n    };\n\n    this.handleMeasurement = width => {\n      const {\n        measuring\n      } = this.state;\n\n      if (measuring) {\n        this.promotedActionsWidths.push(width);\n      }\n    };\n  }\n\n  numberOfPromotedActionsToRender() {\n    const {\n      promotedActions\n    } = this.props;\n    const {\n      containerWidth,\n      measuring\n    } = this.state;\n\n    if (!promotedActions) {\n      return 0;\n    }\n\n    if (containerWidth >= this.bulkActionsWidth || measuring) {\n      return promotedActions.length;\n    }\n\n    let sufficientSpace = false;\n    let counter = promotedActions.length - 1;\n    let totalWidth = 0;\n\n    while (!sufficientSpace && counter >= 0) {\n      totalWidth += this.promotedActionsWidths[counter];\n      const widthWithRemovedAction = this.bulkActionsWidth - totalWidth + this.addedMoreActionsWidthForMeasuring;\n\n      if (containerWidth >= widthWithRemovedAction) {\n        sufficientSpace = true;\n      } else {\n        counter--;\n      }\n    }\n\n    return clamp$1(counter, 0, promotedActions.length);\n  }\n\n  hasActions() {\n    const {\n      promotedActions,\n      actions\n    } = this.props;\n    return Boolean(promotedActions && promotedActions.length > 0 || actions && actions.length > 0);\n  }\n\n  actionSections() {\n    const {\n      actions\n    } = this.props;\n\n    if (!actions || actions.length === 0) {\n      return;\n    }\n\n    if (instanceOfBulkActionListSectionArray(actions)) {\n      return actions;\n    }\n\n    if (instanceOfBulkActionArray(actions)) {\n      return [{\n        items: actions\n      }];\n    }\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n  componentDidMount() {\n    const {\n      actions,\n      promotedActions\n    } = this.props;\n\n    if (promotedActions && !actions && this.moreActionsNode) {\n      this.addedMoreActionsWidthForMeasuring = this.moreActionsNode.getBoundingClientRect().width;\n    }\n\n    this.bulkActionsWidth = this.largeScreenButtonsNode ? this.largeScreenButtonsNode.getBoundingClientRect().width - this.addedMoreActionsWidthForMeasuring : 0;\n\n    if (this.containerNode) {\n      this.setState({\n        containerWidth: this.containerNode.getBoundingClientRect().width,\n        measuring: false\n      });\n    }\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n  render() {\n    const {\n      selectMode,\n      accessibilityLabel,\n      label = '',\n      onToggleAll,\n      selected,\n      smallScreen,\n      disabled,\n      promotedActions,\n      paginatedSelectAllText = null,\n      paginatedSelectAllAction,\n      i18n\n    } = this.props;\n    const actionSections = this.actionSections();\n\n    if (promotedActions && promotedActions.length > MAX_PROMOTED_ACTIONS) {\n      // eslint-disable-next-line no-console\n      console.warn(i18n.translate('Polaris.ResourceList.BulkActions.warningMessage', {\n        maxPromotedActions: MAX_PROMOTED_ACTIONS\n      }));\n    }\n\n    const {\n      smallScreenPopoverVisible,\n      largeScreenPopoverVisible,\n      measuring\n    } = this.state;\n    const paginatedSelectAllActionMarkup = paginatedSelectAllAction ? /*#__PURE__*/React$1.createElement(Button$1, {\n      onClick: paginatedSelectAllAction.onAction,\n      plain: true,\n      disabled: disabled\n    }, paginatedSelectAllAction.content) : null;\n    const paginatedSelectAllTextMarkup = paginatedSelectAllText && paginatedSelectAllAction ? /*#__PURE__*/React$1.createElement(\"span\", {\n      \"aria-live\": \"polite\"\n    }, paginatedSelectAllText) : paginatedSelectAllText;\n    const paginatedSelectAllMarkup = paginatedSelectAllActionMarkup || paginatedSelectAllTextMarkup ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.PaginatedSelectAll\n    }, paginatedSelectAllTextMarkup, \" \", paginatedSelectAllActionMarkup) : null;\n    const cancelButton = /*#__PURE__*/React$1.createElement(Button$1, {\n      onClick: this.setSelectMode.bind(this, false),\n      disabled: disabled\n    }, i18n.translate('Polaris.Common.cancel'));\n    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n    const allActionsPopover = this.hasActions() ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React$1.createElement(Popover$1, {\n      active: smallScreenPopoverVisible,\n      activator: /*#__PURE__*/React$1.createElement(BulkActionButton$1, {\n        disclosure: true,\n        onAction: this.toggleSmallScreenPopover,\n        content: i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel'),\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleSmallScreenPopover\n    }, /*#__PURE__*/React$1.createElement(ActionList$1, {\n      items: promotedActions,\n      sections: actionSections,\n      onActionAnyItem: this.toggleSmallScreenPopover\n    }))) : null;\n    const promotedActionsMarkup = promotedActions && numberOfPromotedActionsToRender > 0 ? [...promotedActions].slice(0, numberOfPromotedActionsToRender).map((action, index) => /*#__PURE__*/React$1.createElement(BulkActionButton$1, Object.assign({\n      disabled: disabled\n    }, action, {\n      key: index,\n      handleMeasurement: this.handleMeasurement\n    }))) : null;\n    const rolledInPromotedActions = promotedActions && numberOfPromotedActionsToRender < promotedActions.length ? [...promotedActions].slice(numberOfPromotedActionsToRender) : [];\n    const activatorLabel = !promotedActions || promotedActions && numberOfPromotedActionsToRender === 0 && !measuring ? i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel') : i18n.translate('Polaris.ResourceList.BulkActions.moreActionsActivatorLabel');\n    let combinedActions = [];\n\n    if (actionSections && rolledInPromotedActions.length > 0) {\n      combinedActions = [{\n        items: rolledInPromotedActions\n      }, ...actionSections];\n    } else if (actionSections) {\n      combinedActions = actionSections;\n    } else if (rolledInPromotedActions.length > 0) {\n      combinedActions = [{\n        items: rolledInPromotedActions\n      }];\n    }\n\n    const actionsPopover = actionSections || rolledInPromotedActions.length > 0 || measuring ? /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React$1.createElement(Popover$1, {\n      active: largeScreenPopoverVisible,\n      activator: /*#__PURE__*/React$1.createElement(BulkActionButton$1, {\n        disclosure: true,\n        onAction: this.toggleLargeScreenPopover,\n        content: activatorLabel,\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleLargeScreenPopover\n    }, /*#__PURE__*/React$1.createElement(ActionList$1, {\n      sections: combinedActions,\n      onActionAnyItem: this.toggleLargeScreenPopover\n    }))) : null;\n    const checkableButtonProps = {\n      accessibilityLabel,\n      label,\n      selected,\n      selectMode,\n      onToggleAll,\n      measuring,\n      disabled\n    };\n    const smallScreenGroup = smallScreen ? /*#__PURE__*/React$1.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"smallGroup\",\n      nodeRef: this.smallScreenGroupNode\n    }, status => {\n      const smallScreenGroupClassName = classNames(styles.Group, styles['Group-smallScreen'], styles[`Group-${status}`]);\n      return /*#__PURE__*/React$1.createElement(\"div\", {\n        className: smallScreenGroupClassName,\n        ref: this.smallScreenGroupNode\n      }, /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper\n      }, /*#__PURE__*/React$1.createElement(ButtonGroup$1, {\n        segmented: true\n      }, /*#__PURE__*/React$1.createElement(CSSTransition, {\n        nodeRef: this.checkableWrapperNode,\n        in: selectMode,\n        timeout: durationBase,\n        classNames: slideClasses,\n        appear: !selectMode\n      }, /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.CheckableContainer,\n        ref: this.checkableWrapperNode\n      }, /*#__PURE__*/React$1.createElement(CheckableButton$1, Object.assign({}, checkableButtonProps, {\n        smallScreen: true\n      })))), allActionsPopover, cancelButton)), paginatedSelectAllMarkup);\n    }) : null;\n    const largeGroupContent = promotedActionsMarkup || actionsPopover ? /*#__PURE__*/React$1.createElement(ButtonGroup$1, {\n      segmented: true\n    }, /*#__PURE__*/React$1.createElement(CheckableButton$1, checkableButtonProps), promotedActionsMarkup, actionsPopover) : /*#__PURE__*/React$1.createElement(CheckableButton$1, checkableButtonProps);\n    const largeScreenGroup = smallScreen ? null : /*#__PURE__*/React$1.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"largeGroup\",\n      nodeRef: this.largeScreenGroupNode\n    }, status => {\n      const largeScreenGroupClassName = classNames(styles.Group, styles['Group-largeScreen'], !measuring && styles[`Group-${status}`], measuring && styles['Group-measuring']);\n      return /*#__PURE__*/React$1.createElement(\"div\", {\n        className: largeScreenGroupClassName,\n        ref: this.largeScreenGroupNode\n      }, /*#__PURE__*/React$1.createElement(EventListener$1, {\n        event: \"resize\",\n        handler: this.handleResize\n      }), /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper,\n        ref: this.setLargeScreenButtonsNode\n      }, largeGroupContent), paginatedSelectAllMarkup);\n    });\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      ref: this.setContainerNode\n    }, smallScreenGroup, largeScreenGroup);\n  }\n\n  isNewBadgeInBadgeActions() {\n    const actions = this.actionSections();\n    if (!actions) return false;\n\n    for (const action of actions) {\n      for (const item of action.items) {\n        var _item$badge;\n\n        if (((_item$badge = item.badge) == null ? void 0 : _item$badge.status) === 'new') return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nfunction instanceOfBulkActionListSectionArray(actions) {\n  const validList = actions.filter(action => {\n    return action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction instanceOfBulkActionArray(actions) {\n  const validList = actions.filter(action => {\n    return !action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction BulkActions(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React$1.createElement(BulkActionsInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { BulkActions };\n"]},"metadata":{},"sourceType":"module"}