{"ast":null,"code":"import React$1, { useMemo } from 'react';\nimport { IndexContext, IndexRowContext, IndexSelectionChangeContext } from '../../utilities/index-provider/context.js';\nimport { useBulkSelectionData, useHandleBulkSelection } from '../../utilities/index-provider/hooks.js';\n\nfunction IndexProvider(_ref) {\n  var children = _ref.children,\n      passedResourceName = _ref.resourceName,\n      loading = _ref.loading,\n      onSelectionChange = _ref.onSelectionChange,\n      selectedItemsCount = _ref.selectedItemsCount,\n      itemCount = _ref.itemCount,\n      hasMoreItems = _ref.hasMoreItems,\n      condensed = _ref.condensed;\n\n  var _useBulkSelectionData = useBulkSelectionData({\n    selectedItemsCount: selectedItemsCount,\n    itemCount: itemCount,\n    hasMoreItems: hasMoreItems,\n    resourceName: passedResourceName\n  }),\n      paginatedSelectAllText = _useBulkSelectionData.paginatedSelectAllText,\n      bulkActionsLabel = _useBulkSelectionData.bulkActionsLabel,\n      bulkActionsAccessibilityLabel = _useBulkSelectionData.bulkActionsAccessibilityLabel,\n      resourceName = _useBulkSelectionData.resourceName,\n      selectMode = _useBulkSelectionData.selectMode,\n      bulkSelectState = _useBulkSelectionData.bulkSelectState,\n      selectable = _useBulkSelectionData.selectable;\n\n  var handleSelectionChange = useHandleBulkSelection({\n    onSelectionChange: onSelectionChange\n  });\n  var contextValue = useMemo(function () {\n    return {\n      itemCount: itemCount,\n      selectMode: selectMode,\n      selectable: selectable,\n      resourceName: resourceName,\n      loading: loading,\n      paginatedSelectAllText: paginatedSelectAllText,\n      hasMoreItems: hasMoreItems,\n      bulkActionsLabel: bulkActionsLabel,\n      bulkActionsAccessibilityLabel: bulkActionsAccessibilityLabel,\n      bulkSelectState: bulkSelectState,\n      selectedItemsCount: selectedItemsCount,\n      condensed: condensed\n    };\n  }, [itemCount, selectMode, selectable, resourceName, loading, paginatedSelectAllText, hasMoreItems, bulkActionsLabel, bulkActionsAccessibilityLabel, bulkSelectState, selectedItemsCount, condensed]);\n  var rowContextValue = useMemo(function () {\n    return {\n      selectMode: selectMode,\n      condensed: condensed\n    };\n  }, [condensed, selectMode]);\n  return /*#__PURE__*/React$1.createElement(IndexContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React$1.createElement(IndexRowContext.Provider, {\n    value: rowContextValue\n  }, /*#__PURE__*/React$1.createElement(IndexSelectionChangeContext.Provider, {\n    value: handleSelectionChange\n  }, children)));\n}\n\nexport { IndexProvider };","map":{"version":3,"sources":["/home/hoangdev/Desktop/front.test/node_modules/@shopify/polaris/dist/esm/components/IndexProvider/IndexProvider.js"],"names":["React$1","useMemo","IndexContext","IndexRowContext","IndexSelectionChangeContext","useBulkSelectionData","useHandleBulkSelection","IndexProvider","children","passedResourceName","resourceName","loading","onSelectionChange","selectedItemsCount","itemCount","hasMoreItems","condensed","paginatedSelectAllText","bulkActionsLabel","bulkActionsAccessibilityLabel","selectMode","bulkSelectState","selectable","handleSelectionChange","contextValue","rowContextValue","createElement","Provider","value"],"mappings":"AAAA,OAAOA,OAAP,IAAkBC,OAAlB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,2BAAxC,QAA2E,2CAA3E;AACA,SAASC,oBAAT,EAA+BC,sBAA/B,QAA6D,yCAA7D;;AAEA,SAASC,aAAT,OASG;AAAA,MARDC,QAQC,QARDA,QAQC;AAAA,MAPaC,kBAOb,QAPDC,YAOC;AAAA,MANDC,OAMC,QANDA,OAMC;AAAA,MALDC,iBAKC,QALDA,iBAKC;AAAA,MAJDC,kBAIC,QAJDA,kBAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFDC,YAEC,QAFDA,YAEC;AAAA,MADDC,SACC,QADDA,SACC;;AAAA,8BASGX,oBAAoB,CAAC;AACvBQ,IAAAA,kBAAkB,EAAlBA,kBADuB;AAEvBC,IAAAA,SAAS,EAATA,SAFuB;AAGvBC,IAAAA,YAAY,EAAZA,YAHuB;AAIvBL,IAAAA,YAAY,EAAED;AAJS,GAAD,CATvB;AAAA,MAECQ,sBAFD,yBAECA,sBAFD;AAAA,MAGCC,gBAHD,yBAGCA,gBAHD;AAAA,MAICC,6BAJD,yBAICA,6BAJD;AAAA,MAKCT,YALD,yBAKCA,YALD;AAAA,MAMCU,UAND,yBAMCA,UAND;AAAA,MAOCC,eAPD,yBAOCA,eAPD;AAAA,MAQCC,UARD,yBAQCA,UARD;;AAeD,MAAMC,qBAAqB,GAAGjB,sBAAsB,CAAC;AACnDM,IAAAA,iBAAiB,EAAjBA;AADmD,GAAD,CAApD;AAGA,MAAMY,YAAY,GAAGvB,OAAO,CAAC;AAAA,WAAO;AAClCa,MAAAA,SAAS,EAATA,SADkC;AAElCM,MAAAA,UAAU,EAAVA,UAFkC;AAGlCE,MAAAA,UAAU,EAAVA,UAHkC;AAIlCZ,MAAAA,YAAY,EAAZA,YAJkC;AAKlCC,MAAAA,OAAO,EAAPA,OALkC;AAMlCM,MAAAA,sBAAsB,EAAtBA,sBANkC;AAOlCF,MAAAA,YAAY,EAAZA,YAPkC;AAQlCG,MAAAA,gBAAgB,EAAhBA,gBARkC;AASlCC,MAAAA,6BAA6B,EAA7BA,6BATkC;AAUlCE,MAAAA,eAAe,EAAfA,eAVkC;AAWlCR,MAAAA,kBAAkB,EAAlBA,kBAXkC;AAYlCG,MAAAA,SAAS,EAATA;AAZkC,KAAP;AAAA,GAAD,EAaxB,CAACF,SAAD,EAAYM,UAAZ,EAAwBE,UAAxB,EAAoCZ,YAApC,EAAkDC,OAAlD,EAA2DM,sBAA3D,EAAmFF,YAAnF,EAAiGG,gBAAjG,EAAmHC,6BAAnH,EAAkJE,eAAlJ,EAAmKR,kBAAnK,EAAuLG,SAAvL,CAbwB,CAA5B;AAcA,MAAMS,eAAe,GAAGxB,OAAO,CAAC;AAAA,WAAO;AACrCmB,MAAAA,UAAU,EAAVA,UADqC;AAErCJ,MAAAA,SAAS,EAATA;AAFqC,KAAP;AAAA,GAAD,EAG3B,CAACA,SAAD,EAAYI,UAAZ,CAH2B,CAA/B;AAIA,SAAO,aAAapB,OAAO,CAAC0B,aAAR,CAAsBxB,YAAY,CAACyB,QAAnC,EAA6C;AAC/DC,IAAAA,KAAK,EAAEJ;AADwD,GAA7C,EAEjB,aAAaxB,OAAO,CAAC0B,aAAR,CAAsBvB,eAAe,CAACwB,QAAtC,EAAgD;AAC9DC,IAAAA,KAAK,EAAEH;AADuD,GAAhD,EAEb,aAAazB,OAAO,CAAC0B,aAAR,CAAsBtB,2BAA2B,CAACuB,QAAlD,EAA4D;AAC1EC,IAAAA,KAAK,EAAEL;AADmE,GAA5D,EAEbf,QAFa,CAFA,CAFI,CAApB;AAOD;;AAED,SAASD,aAAT","sourcesContent":["import React$1, { useMemo } from 'react';\nimport { IndexContext, IndexRowContext, IndexSelectionChangeContext } from '../../utilities/index-provider/context.js';\nimport { useBulkSelectionData, useHandleBulkSelection } from '../../utilities/index-provider/hooks.js';\n\nfunction IndexProvider({\n  children,\n  resourceName: passedResourceName,\n  loading,\n  onSelectionChange,\n  selectedItemsCount,\n  itemCount,\n  hasMoreItems,\n  condensed\n}) {\n  const {\n    paginatedSelectAllText,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    resourceName,\n    selectMode,\n    bulkSelectState,\n    selectable\n  } = useBulkSelectionData({\n    selectedItemsCount,\n    itemCount,\n    hasMoreItems,\n    resourceName: passedResourceName\n  });\n  const handleSelectionChange = useHandleBulkSelection({\n    onSelectionChange\n  });\n  const contextValue = useMemo(() => ({\n    itemCount,\n    selectMode,\n    selectable,\n    resourceName,\n    loading,\n    paginatedSelectAllText,\n    hasMoreItems,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    bulkSelectState,\n    selectedItemsCount,\n    condensed\n  }), [itemCount, selectMode, selectable, resourceName, loading, paginatedSelectAllText, hasMoreItems, bulkActionsLabel, bulkActionsAccessibilityLabel, bulkSelectState, selectedItemsCount, condensed]);\n  const rowContextValue = useMemo(() => ({\n    selectMode,\n    condensed\n  }), [condensed, selectMode]);\n  return /*#__PURE__*/React$1.createElement(IndexContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React$1.createElement(IndexRowContext.Provider, {\n    value: rowContextValue\n  }, /*#__PURE__*/React$1.createElement(IndexSelectionChangeContext.Provider, {\n    value: handleSelectionChange\n  }, children)));\n}\n\nexport { IndexProvider };\n"]},"metadata":{},"sourceType":"module"}