{"ast":null,"code":"import _classCallCheck from \"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport React$1, { PureComponent } from 'react';\nimport { hsbToRgb } from '../../../../utilities/color-transformers.js';\nimport styles from '../../ColorPicker.scss.js';\nimport { Slidable as Slidable$1 } from '../Slidable/Slidable.js';\nimport { alphaForDraggerY, calculateDraggerY } from './utilities.js';\n\nvar AlphaPicker = /*#__PURE__*/function (_PureComponent) {\n  _inherits(AlphaPicker, _PureComponent);\n\n  var _super = _createSuper(AlphaPicker);\n\n  function AlphaPicker() {\n    var _this;\n\n    _classCallCheck(this, AlphaPicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      sliderHeight: 0,\n      draggerHeight: 0\n    };\n\n    _this.setSliderHeight = function (node) {\n      if (node == null) {\n        return;\n      }\n\n      _this.setState({\n        sliderHeight: node.clientHeight\n      });\n\n      if (process.env.NODE_ENV === 'development') {\n        setTimeout(function () {\n          _this.setState({\n            sliderHeight: node.clientHeight\n          });\n        }, 0);\n      }\n    };\n\n    _this.setDraggerHeight = function (height) {\n      _this.setState({\n        draggerHeight: height\n      });\n    };\n\n    _this.handleChange = function (_ref) {\n      var y = _ref.y;\n      var onChange = _this.props.onChange;\n      var sliderHeight = _this.state.sliderHeight;\n      var alpha = alphaForDraggerY(y, sliderHeight);\n      onChange(alpha);\n    };\n\n    return _this;\n  }\n\n  _createClass(AlphaPicker, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          alpha = _this$props.alpha;\n      var _this$state = this.state,\n          sliderHeight = _this$state.sliderHeight,\n          draggerHeight = _this$state.draggerHeight;\n      var draggerY = calculateDraggerY(alpha, sliderHeight, draggerHeight);\n      var background = alphaGradientForColor(color);\n      return /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.AlphaPicker,\n        ref: this.setSliderHeight\n      }, /*#__PURE__*/React$1.createElement(\"div\", {\n        className: styles.ColorLayer,\n        style: {\n          background: background\n        }\n      }), /*#__PURE__*/React$1.createElement(Slidable$1, {\n        draggerY: draggerY,\n        draggerX: 0,\n        onChange: this.handleChange,\n        onDraggerHeight: this.setDraggerHeight\n      }));\n    }\n  }]);\n\n  return AlphaPicker;\n}(PureComponent);\n\nfunction alphaGradientForColor(color) {\n  var _hsbToRgb = hsbToRgb(color),\n      red = _hsbToRgb.red,\n      green = _hsbToRgb.green,\n      blue = _hsbToRgb.blue;\n\n  var rgb = \"\".concat(red, \", \").concat(green, \", \").concat(blue);\n  return \"linear-gradient(to top, rgba(\".concat(rgb, \", 0) 18px, rgba(\").concat(rgb, \", 1) calc(100% - 18px))\");\n}\n\nexport { AlphaPicker };","map":{"version":3,"sources":["/home/hoangdev/Desktop/front.test/node_modules/@shopify/polaris/dist/esm/components/ColorPicker/components/AlphaPicker/AlphaPicker.js"],"names":["React$1","PureComponent","hsbToRgb","styles","Slidable","Slidable$1","alphaForDraggerY","calculateDraggerY","AlphaPicker","args","state","sliderHeight","draggerHeight","setSliderHeight","node","setState","clientHeight","process","env","NODE_ENV","setTimeout","setDraggerHeight","height","handleChange","y","onChange","props","alpha","color","draggerY","background","alphaGradientForColor","createElement","className","ref","ColorLayer","style","draggerX","onDraggerHeight","red","green","blue","rgb"],"mappings":"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","sourcesContent":["import React$1, { PureComponent } from 'react';\nimport { hsbToRgb } from '../../../../utilities/color-transformers.js';\nimport styles from '../../ColorPicker.scss.js';\nimport { Slidable as Slidable$1 } from '../Slidable/Slidable.js';\nimport { alphaForDraggerY, calculateDraggerY } from './utilities.js';\n\nclass AlphaPicker extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sliderHeight: 0,\n      draggerHeight: 0\n    };\n\n    this.setSliderHeight = node => {\n      if (node == null) {\n        return;\n      }\n\n      this.setState({\n        sliderHeight: node.clientHeight\n      });\n\n      if (process.env.NODE_ENV === 'development') {\n        setTimeout(() => {\n          this.setState({\n            sliderHeight: node.clientHeight\n          });\n        }, 0);\n      }\n    };\n\n    this.setDraggerHeight = height => {\n      this.setState({\n        draggerHeight: height\n      });\n    };\n\n    this.handleChange = ({\n      y\n    }) => {\n      const {\n        onChange\n      } = this.props;\n      const {\n        sliderHeight\n      } = this.state;\n      const alpha = alphaForDraggerY(y, sliderHeight);\n      onChange(alpha);\n    };\n  }\n\n  render() {\n    const {\n      color,\n      alpha\n    } = this.props;\n    const {\n      sliderHeight,\n      draggerHeight\n    } = this.state;\n    const draggerY = calculateDraggerY(alpha, sliderHeight, draggerHeight);\n    const background = alphaGradientForColor(color);\n    return /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.AlphaPicker,\n      ref: this.setSliderHeight\n    }, /*#__PURE__*/React$1.createElement(\"div\", {\n      className: styles.ColorLayer,\n      style: {\n        background\n      }\n    }), /*#__PURE__*/React$1.createElement(Slidable$1, {\n      draggerY: draggerY,\n      draggerX: 0,\n      onChange: this.handleChange,\n      onDraggerHeight: this.setDraggerHeight\n    }));\n  }\n\n}\n\nfunction alphaGradientForColor(color) {\n  const {\n    red,\n    green,\n    blue\n  } = hsbToRgb(color);\n  const rgb = `${red}, ${green}, ${blue}`;\n  return `linear-gradient(to top, rgba(${rgb}, 0) 18px, rgba(${rgb}, 1) calc(100% - 18px))`;\n}\n\nexport { AlphaPicker };\n"]},"metadata":{},"sourceType":"module"}