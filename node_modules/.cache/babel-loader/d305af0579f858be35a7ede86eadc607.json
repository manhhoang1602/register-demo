{"ast":null,"code":"import _regeneratorRuntime from\"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{makeObservable,observable,action}from\"mobx\";import axios from\"axios\";var BaseService=/*#__PURE__*/function(){function BaseService(type,mes,statusPushMes,statusLoading){_classCallCheck(this,BaseService);this.type=void 0;this.mes=void 0;this.statusPushMes=void 0;this.statusLoading=void 0;makeObservable(this,{type:observable,mes:observable,statusPushMes:observable,statusLoading:observable,pushNotify:action,setStatusLoading:action});this.type=type;this.mes=mes;this.statusPushMes=statusPushMes;this.statusLoading=statusLoading;}_createClass(BaseService,[{key:\"pushNotify\",value:function pushNotify(type,mes){var _this=this;this.type=type;this.mes=mes;this.statusPushMes=true;setTimeout(function(){_this.statusPushMes=false;},4000);}},{key:\"setStatusLoading\",value:function setStatusLoading(status){this.statusLoading=status;}}]);return BaseService;}();export var getRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios({method:'get',url:url});case 3:res=_context.sent;if(!res){_context.next=6;break;}return _context.abrupt(\"return\",{status:res.status,body:res.data});case 6:return _context.abrupt(\"return\",{status:0,body:{}});case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.error(_context.t0);return _context.abrupt(\"return\",{status:_context.t0.response.status,body:_context.t0.response.data});case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function getRequest(_x){return _ref.apply(this,arguments);};}();export var postRequest=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data,url){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios({method:'post',url:url,data:data});case 3:res=_context2.sent;if(!res){_context2.next=6;break;}return _context2.abrupt(\"return\",{status:res.status,body:res.data});case 6:return _context2.abrupt(\"return\",{status:0,body:{}});case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);return _context2.abrupt(\"return\",{status:_context2.t0.response.status,body:_context2.t0.response.data});case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function postRequest(_x2,_x3){return _ref2.apply(this,arguments);};}();export default new BaseService('info','no mes',false,false);","map":{"version":3,"sources":["/home/hoangdev/Desktop/front.test/src/commons/services/BaseService.ts"],"names":["makeObservable","observable","action","axios","BaseService","type","mes","statusPushMes","statusLoading","pushNotify","setStatusLoading","setTimeout","status","getRequest","url","method","res","body","data","console","error","response","postRequest"],"mappings":"2lBAAA,OAAQA,cAAR,CAAwBC,UAAxB,CAAoCC,MAApC,KAAiD,MAAjD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,W,yBAMF,qBAAYC,IAAZ,CAA4DC,GAA5D,CAAyEC,aAAzE,CAAiGC,aAAjG,CAAyH,wCALzHH,IAKyH,aAJzHC,GAIyH,aAHzHC,aAGyH,aAFzHC,aAEyH,QACrHR,cAAc,CAAC,IAAD,CAAO,CACjBK,IAAI,CAAEJ,UADW,CAEjBK,GAAG,CAAEL,UAFY,CAGjBM,aAAa,CAAEN,UAHE,CAIjBO,aAAa,CAAEP,UAJE,CAMjBQ,UAAU,CAAEP,MANK,CAOjBQ,gBAAgB,CAAER,MAPD,CAAP,CAAd,CASA,KAAKG,IAAL,CAAYA,IAAZ,CACA,KAAKC,GAAL,CAAWA,GAAX,CACA,KAAKC,aAAL,CAAqBA,aAArB,CACA,KAAKC,aAAL,CAAqBA,aAArB,CACH,C,kDAED,oBAAWH,IAAX,CAA2DC,GAA3D,CAAwE,gBACpE,KAAKD,IAAL,CAAYA,IAAZ,CACA,KAAKC,GAAL,CAAWA,GAAX,CACA,KAAKC,aAAL,CAAqB,IAArB,CACAI,UAAU,CAAC,UAAM,CACb,KAAI,CAACJ,aAAL,CAAqB,KAArB,CACH,CAFS,CAEP,IAFO,CAAV,CAGH,C,gCAED,0BAAiBK,MAAjB,CAAkC,CAC9B,KAAKJ,aAAL,CAAqBI,MAArB,CACH,C,2BAQL,MAAO,IAAMC,CAAAA,UAAU,0FAAG,iBAAOC,GAAP,gKAEFX,CAAAA,KAAK,CAAC,CAClBY,MAAM,CAAE,KADU,CAElBD,GAAG,CAAEA,GAFa,CAAD,CAFH,QAEdE,GAFc,mBAOdA,GAPc,yDAQP,CACHJ,MAAM,CAAEI,GAAG,CAACJ,MADT,CAEHK,IAAI,CAAED,GAAG,CAACE,IAFP,CARO,yCAcX,CACHN,MAAM,CAAE,CADL,CAEHK,IAAI,CAAE,EAFH,CAdW,0DAmBlBE,OAAO,CAACC,KAAR,cAnBkB,gCAoBX,CACHR,MAAM,CAAE,YAAES,QAAF,CAAWT,MADhB,CAEHK,IAAI,CAAE,YAAEI,QAAF,CAAWH,IAFd,CApBW,sEAAH,kBAAVL,CAAAA,UAAU,4CAAhB,CA2BP,MAAO,IAAMS,CAAAA,WAAW,2FAAG,kBAAOJ,IAAP,CAAkBJ,GAAlB,sKAEHX,CAAAA,KAAK,CAAC,CAClBY,MAAM,CAAE,MADU,CAElBD,GAAG,CAAEA,GAFa,CAGlBI,IAAI,CAAEA,IAHY,CAAD,CAFF,QAEfF,GAFe,oBAQfA,GARe,2DASR,CACHJ,MAAM,CAAEI,GAAG,CAACJ,MADT,CAEHK,IAAI,CAAED,GAAG,CAACE,IAFP,CATQ,0CAeZ,CACHN,MAAM,CAAE,CADL,CAEHK,IAAI,CAAE,EAFH,CAfY,6DAoBnBE,OAAO,CAACC,KAAR,eApBmB,iCAqBZ,CACHR,MAAM,CAAE,aAAES,QAAF,CAAWT,MADhB,CAEHK,IAAI,CAAE,aAAEI,QAAF,CAAWH,IAFd,CArBY,wEAAH,kBAAXI,CAAAA,WAAW,kDAAjB,CA4BP,cAAe,IAAIlB,CAAAA,WAAJ,CAAgB,MAAhB,CAAwB,QAAxB,CAAkC,KAAlC,CAAyC,KAAzC,CAAf","sourcesContent":["import {makeObservable, observable, action} from \"mobx\";\nimport axios from \"axios\";\n\nclass BaseService {\n    type: 'info' | 'warring' | 'error' | 'success';\n    mes: string;\n    statusPushMes: boolean;\n    statusLoading: boolean;\n\n    constructor(type: 'info' | 'warring' | 'error' | 'success', mes: string, statusPushMes: boolean, statusLoading: boolean) {\n        makeObservable(this, {\n            type: observable,\n            mes: observable,\n            statusPushMes: observable,\n            statusLoading: observable,\n\n            pushNotify: action,\n            setStatusLoading: action,\n        })\n        this.type = type;\n        this.mes = mes;\n        this.statusPushMes = statusPushMes;\n        this.statusLoading = statusLoading;\n    }\n\n    pushNotify(type: 'info' | 'warring' | 'error' | 'success', mes: string) {\n        this.type = type;\n        this.mes = mes;\n        this.statusPushMes = true;\n        setTimeout(() => {\n            this.statusPushMes = false;\n        }, 4000);\n    }\n\n    setStatusLoading(status: boolean) {\n        this.statusLoading = status;\n    }\n}\n\nexport interface IApiRes<T> {\n    status: number\n    body: T\n}\n\nexport const getRequest = async (url: string): Promise<IApiRes<any>> => {\n    try {\n        let res = await axios({\n            method: 'get',\n            url: url,\n        })\n\n        if (res) {\n            return {\n                status: res.status,\n                body: res.data\n            }\n        }\n\n        return {\n            status: 0,\n            body: {}\n        }\n    } catch (e) {\n        console.error(e);\n        return {\n            status: e.response.status,\n            body: e.response.data,\n        }\n    }\n}\n\nexport const postRequest = async (data: any, url: string): Promise<IApiRes<any>> => {\n    try {\n        let res = await axios({\n            method: 'post',\n            url: url,\n            data: data\n        });\n\n        if (res) {\n            return {\n                status: res.status,\n                body: res.data\n            }\n        }\n\n        return {\n            status: 0,\n            body: {}\n        }\n    } catch (e) {\n        console.error(e);\n        return {\n            status: e.response.status,\n            body: e.response.data,\n        }\n    }\n}\n\nexport default new BaseService('info', 'no mes', false, false);"]},"metadata":{},"sourceType":"module"}