{"ast":null,"code":"import _slicedToArray from \"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React$1, { useRef, useState } from 'react';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { classNames } from '../../utilities/css.js';\nimport { useToggle as useToggle$1 } from '../../utilities/use-toggle.js';\nimport { Choice as Choice$1, helpTextID } from '../Choice/Choice.js';\nimport styles from './RadioButton.scss.js';\n\nfunction RadioButton(_ref) {\n  var ariaDescribedByProp = _ref.ariaDescribedBy,\n      label = _ref.label,\n      labelHidden = _ref.labelHidden,\n      helpText = _ref.helpText,\n      checked = _ref.checked,\n      disabled = _ref.disabled,\n      onChange = _ref.onChange,\n      onFocus = _ref.onFocus,\n      onBlur = _ref.onBlur,\n      idProp = _ref.id,\n      nameProp = _ref.name,\n      value = _ref.value;\n  var id = useUniqueId('RadioButton', idProp);\n  var name = nameProp || id;\n  var inputNode = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      keyFocused = _useState2[0],\n      setKeyFocused = _useState2[1];\n\n  var _useToggle$ = useToggle$1(false),\n      mouseOver = _useToggle$.value,\n      handleMouseOver = _useToggle$.setTrue,\n      handleMouseOut = _useToggle$.setFalse;\n\n  var handleKeyUp = function handleKeyUp() {\n    !keyFocused && setKeyFocused(true);\n  };\n\n  var handleBlur = function handleBlur() {\n    onBlur && onBlur();\n    setKeyFocused(false);\n  };\n\n  function handleChange(_ref2) {\n    var currentTarget = _ref2.currentTarget;\n    onChange && onChange(currentTarget.checked, id);\n  }\n\n  var describedBy = [];\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  if (ariaDescribedByProp) {\n    describedBy.push(ariaDescribedByProp);\n  }\n\n  var ariaDescribedBy = describedBy.length ? describedBy.join(' ') : undefined;\n  var inputClassName = classNames(styles.Input, keyFocused && styles.keyFocused);\n  var backdropClassName = classNames(styles.Backdrop, mouseOver && styles.hover);\n  return /*#__PURE__*/React$1.createElement(Choice$1, {\n    label: label,\n    labelHidden: labelHidden,\n    disabled: disabled,\n    id: id,\n    helpText: helpText,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut\n  }, /*#__PURE__*/React$1.createElement(\"span\", {\n    className: styles.RadioButton\n  }, /*#__PURE__*/React$1.createElement(\"input\", {\n    id: id,\n    name: name,\n    value: value,\n    type: \"radio\",\n    checked: checked,\n    disabled: disabled,\n    className: inputClassName,\n    onChange: handleChange,\n    onFocus: onFocus,\n    onKeyUp: handleKeyUp,\n    onBlur: handleBlur,\n    \"aria-describedby\": ariaDescribedBy,\n    ref: inputNode\n  }), /*#__PURE__*/React$1.createElement(\"span\", {\n    className: backdropClassName\n  })));\n}\n\nexport { RadioButton };","map":{"version":3,"sources":["/home/hoangdev/Desktop/front.test/node_modules/@shopify/polaris/dist/esm/components/RadioButton/RadioButton.js"],"names":["React$1","useRef","useState","useUniqueId","classNames","useToggle","useToggle$1","Choice","Choice$1","helpTextID","styles","RadioButton","ariaDescribedByProp","ariaDescribedBy","label","labelHidden","helpText","checked","disabled","onChange","onFocus","onBlur","idProp","id","nameProp","name","value","inputNode","keyFocused","setKeyFocused","mouseOver","handleMouseOver","setTrue","handleMouseOut","setFalse","handleKeyUp","handleBlur","handleChange","currentTarget","describedBy","push","length","join","undefined","inputClassName","Input","backdropClassName","Backdrop","hover","createElement","onMouseOver","onMouseOut","className","type","onKeyUp","ref"],"mappings":"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","sourcesContent":["import React$1, { useRef, useState } from 'react';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { classNames } from '../../utilities/css.js';\nimport { useToggle as useToggle$1 } from '../../utilities/use-toggle.js';\nimport { Choice as Choice$1, helpTextID } from '../Choice/Choice.js';\nimport styles from './RadioButton.scss.js';\n\nfunction RadioButton({\n  ariaDescribedBy: ariaDescribedByProp,\n  label,\n  labelHidden,\n  helpText,\n  checked,\n  disabled,\n  onChange,\n  onFocus,\n  onBlur,\n  id: idProp,\n  name: nameProp,\n  value\n}) {\n  const id = useUniqueId('RadioButton', idProp);\n  const name = nameProp || id;\n  const inputNode = useRef(null);\n  const [keyFocused, setKeyFocused] = useState(false);\n  const {\n    value: mouseOver,\n    setTrue: handleMouseOver,\n    setFalse: handleMouseOut\n  } = useToggle$1(false);\n\n  const handleKeyUp = () => {\n    !keyFocused && setKeyFocused(true);\n  };\n\n  const handleBlur = () => {\n    onBlur && onBlur();\n    setKeyFocused(false);\n  };\n\n  function handleChange({\n    currentTarget\n  }) {\n    onChange && onChange(currentTarget.checked, id);\n  }\n\n  const describedBy = [];\n\n  if (helpText) {\n    describedBy.push(helpTextID(id));\n  }\n\n  if (ariaDescribedByProp) {\n    describedBy.push(ariaDescribedByProp);\n  }\n\n  const ariaDescribedBy = describedBy.length ? describedBy.join(' ') : undefined;\n  const inputClassName = classNames(styles.Input, keyFocused && styles.keyFocused);\n  const backdropClassName = classNames(styles.Backdrop, mouseOver && styles.hover);\n  return /*#__PURE__*/React$1.createElement(Choice$1, {\n    label: label,\n    labelHidden: labelHidden,\n    disabled: disabled,\n    id: id,\n    helpText: helpText,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut\n  }, /*#__PURE__*/React$1.createElement(\"span\", {\n    className: styles.RadioButton\n  }, /*#__PURE__*/React$1.createElement(\"input\", {\n    id: id,\n    name: name,\n    value: value,\n    type: \"radio\",\n    checked: checked,\n    disabled: disabled,\n    className: inputClassName,\n    onChange: handleChange,\n    onFocus: onFocus,\n    onKeyUp: handleKeyUp,\n    onBlur: handleBlur,\n    \"aria-describedby\": ariaDescribedBy,\n    ref: inputNode\n  }), /*#__PURE__*/React$1.createElement(\"span\", {\n    className: backdropClassName\n  })));\n}\n\nexport { RadioButton };\n"]},"metadata":{},"sourceType":"module"}