{"ast":null,"code":"import { useContext, useMemo, useEffect } from 'react';\nimport { MissingAppProviderError } from '../errors.js';\nimport { FocusManagerContext } from './context.js';\nimport { useUniqueId } from '../unique-id/hooks.js';\n\nfunction useFocusManager(_ref) {\n  var trapping = _ref.trapping;\n  var focusManager = useContext(FocusManagerContext);\n  var id = useUniqueId();\n\n  if (!focusManager) {\n    throw new MissingAppProviderError('No FocusManager was provided.');\n  }\n\n  var trapFocusList = focusManager.trapFocusList,\n      addFocusItem = focusManager.add,\n      removeFocusItem = focusManager.remove;\n  var canSafelyFocus = trapFocusList[0] === id;\n  var value = useMemo(function () {\n    return {\n      canSafelyFocus: canSafelyFocus\n    };\n  }, [canSafelyFocus]);\n  useEffect(function () {\n    if (!trapping) return;\n    addFocusItem(id);\n    return function () {\n      removeFocusItem(id);\n    };\n  }, [addFocusItem, id, removeFocusItem, trapping]);\n  return value;\n}\n\nexport { useFocusManager };","map":{"version":3,"sources":["/home/hoangdev/Desktop/front.test/node_modules/@shopify/polaris/dist/esm/utilities/focus-manager/hooks.js"],"names":["useContext","useMemo","useEffect","MissingAppProviderError","FocusManagerContext","useUniqueId","useFocusManager","trapping","focusManager","id","trapFocusList","addFocusItem","add","removeFocusItem","remove","canSafelyFocus","value"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,uBAAT,QAAwC,cAAxC;AACA,SAASC,mBAAT,QAAoC,cAApC;AACA,SAASC,WAAT,QAA4B,uBAA5B;;AAEA,SAASC,eAAT,OAEG;AAAA,MADDC,QACC,QADDA,QACC;AACD,MAAMC,YAAY,GAAGR,UAAU,CAACI,mBAAD,CAA/B;AACA,MAAMK,EAAE,GAAGJ,WAAW,EAAtB;;AAEA,MAAI,CAACG,YAAL,EAAmB;AACjB,UAAM,IAAIL,uBAAJ,CAA4B,+BAA5B,CAAN;AACD;;AANA,MASCO,aATD,GAYGF,YAZH,CASCE,aATD;AAAA,MAUMC,YAVN,GAYGH,YAZH,CAUCI,GAVD;AAAA,MAWSC,eAXT,GAYGL,YAZH,CAWCM,MAXD;AAaD,MAAMC,cAAc,GAAGL,aAAa,CAAC,CAAD,CAAb,KAAqBD,EAA5C;AACA,MAAMO,KAAK,GAAGf,OAAO,CAAC;AAAA,WAAO;AAC3Bc,MAAAA,cAAc,EAAdA;AAD2B,KAAP;AAAA,GAAD,EAEjB,CAACA,cAAD,CAFiB,CAArB;AAGAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACK,QAAL,EAAe;AACfI,IAAAA,YAAY,CAACF,EAAD,CAAZ;AACA,WAAO,YAAM;AACXI,MAAAA,eAAe,CAACJ,EAAD,CAAf;AACD,KAFD;AAGD,GANQ,EAMN,CAACE,YAAD,EAAeF,EAAf,EAAmBI,eAAnB,EAAoCN,QAApC,CANM,CAAT;AAOA,SAAOS,KAAP;AACD;;AAED,SAASV,eAAT","sourcesContent":["import { useContext, useMemo, useEffect } from 'react';\nimport { MissingAppProviderError } from '../errors.js';\nimport { FocusManagerContext } from './context.js';\nimport { useUniqueId } from '../unique-id/hooks.js';\n\nfunction useFocusManager({\n  trapping\n}) {\n  const focusManager = useContext(FocusManagerContext);\n  const id = useUniqueId();\n\n  if (!focusManager) {\n    throw new MissingAppProviderError('No FocusManager was provided.');\n  }\n\n  const {\n    trapFocusList,\n    add: addFocusItem,\n    remove: removeFocusItem\n  } = focusManager;\n  const canSafelyFocus = trapFocusList[0] === id;\n  const value = useMemo(() => ({\n    canSafelyFocus\n  }), [canSafelyFocus]);\n  useEffect(() => {\n    if (!trapping) return;\n    addFocusItem(id);\n    return () => {\n      removeFocusItem(id);\n    };\n  }, [addFocusItem, id, removeFocusItem, trapping]);\n  return value;\n}\n\nexport { useFocusManager };\n"]},"metadata":{},"sourceType":"module"}