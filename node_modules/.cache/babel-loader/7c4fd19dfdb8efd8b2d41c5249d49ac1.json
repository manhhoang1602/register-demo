{"ast":null,"code":"import*as React from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";var Notify=function Notify(type,content){var getColor=function getColor(type){if(type==='error')return'rgb(255, 242, 240)';else if(type==='success')return'rgb(246, 255, 237)';else if(type==='info')return'rgb(230, 247, 255)';else return'rgb(255, 251, 230)';};return/*#__PURE__*/_jsxs(\"div\",{style:{minHeight:80,minWidth:400,maxWidth:401,borderRadius:6,display:'flex',alignItems:'center',padding:20,backgroundColor:getColor(type)},children:[/*#__PURE__*/_jsxs(\"span\",{style:{fontWeight:'bold',fontSize:18,marginRight:15},children:[type.toUpperCase(),\":\"]}),content]});};export default Notify;","map":{"version":3,"sources":["/home/hoangdev/Desktop/front.test/src/commons/notify/Notify.tsx"],"names":["React","Notify","type","content","getColor","minHeight","minWidth","maxWidth","borderRadius","display","alignItems","padding","backgroundColor","fontWeight","fontSize","marginRight","toUpperCase"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,C,6CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,IAAD,CAAiDC,OAAjD,CAAsE,CACjF,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACF,IAAD,CAAoD,CACjE,GAAIA,IAAI,GAAK,OAAb,CAAsB,MAAO,oBAAP,CAAtB,IACI,IAAIA,IAAI,GAAK,SAAb,CAAwB,MAAO,oBAAP,CAAxB,IACI,IAAIA,IAAI,GAAK,MAAb,CAAqB,MAAO,oBAAP,CAArB,IAAuD,OAAO,oBAAP,CAC1D,CAJT,CAKA,mBACI,aAAK,KAAK,CAAE,CACRG,SAAS,CAAE,EADH,CAERC,QAAQ,CAAE,GAFF,CAGRC,QAAQ,CAAE,GAHF,CAIRC,YAAY,CAAE,CAJN,CAKRC,OAAO,CAAE,MALD,CAMRC,UAAU,CAAE,QANJ,CAORC,OAAO,CAAE,EAPD,CAQRC,eAAe,CAAER,QAAQ,CAACF,IAAD,CARjB,CAAZ,wBAUI,cAAM,KAAK,CAAE,CAACW,UAAU,CAAE,MAAb,CAAqBC,QAAQ,CAAE,EAA/B,CAAmCC,WAAW,CAAE,EAAhD,CAAb,WAAmEb,IAAI,CAACc,WAAL,EAAnE,OAVJ,CAWMb,OAXN,GADJ,CAeH,CArBD,CAuBA,cAAeF,CAAAA,MAAf","sourcesContent":["import * as React from 'react';\n\nconst Notify = (type: 'info' | 'warring' | 'error' | 'success', content: string ) => {\n    const getColor = (type: 'info' | 'warring' | 'error' | 'success') => {\n        if (type === 'error') return 'rgb(255, 242, 240)'; else\n            if (type === 'success') return 'rgb(246, 255, 237)'; else\n                if (type === 'info') return 'rgb(230, 247, 255)'; else return 'rgb(255, 251, 230)'\n            }\n    return (\n        <div style={{\n            minHeight: 80,\n            minWidth: 400,\n            maxWidth: 401,\n            borderRadius: 6,\n            display: 'flex',\n            alignItems: 'center',\n            padding: 20,\n            backgroundColor: getColor(type)\n        }}>\n            <span style={{fontWeight: 'bold', fontSize: 18, marginRight: 15}}>{type.toUpperCase()}:</span>\n             {content}\n        </div>\n    )\n}\n\nexport default Notify"]},"metadata":{},"sourceType":"module"}