{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.colorFactory = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar hsluv_1 = require(\"hsluv\");\n\nvar base_1 = require(\"./configs/base\");\n\nfunction colorFactory(theme, scheme) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : base_1.config;\n  return Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.entries(theme).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        role = _ref2[0],\n        hex = _ref2[1];\n\n    if (typeof hex !== 'string') {\n      return null;\n    }\n\n    var base = hsluv_1.hexToHsluv(hex);\n    var variants = config[role] || [];\n    return Object.assign({}, variants.reduce(function (accumulator, _a) {\n      var name = _a.name,\n          settings = tslib_1.__rest(_a, [\"name\"]);\n\n      var _settings$scheme = settings[scheme],\n          _settings$scheme$hue = _settings$scheme.hue,\n          hue = _settings$scheme$hue === void 0 ? base[0] : _settings$scheme$hue,\n          _settings$scheme$satu = _settings$scheme.saturation,\n          saturation = _settings$scheme$satu === void 0 ? base[1] : _settings$scheme$satu,\n          _settings$scheme$ligh = _settings$scheme.lightness,\n          lightness = _settings$scheme$ligh === void 0 ? base[2] : _settings$scheme$ligh,\n          _settings$scheme$alph = _settings$scheme.alpha,\n          alpha = _settings$scheme$alph === void 0 ? 1 : _settings$scheme$alph;\n\n      var resolve = function resolve(value, baseToResolve) {\n        return typeof value === 'number' ? value : value(baseToResolve);\n      };\n\n      var _hsluv_1$hsluvToRgb$m = hsluv_1.hsluvToRgb([resolve(hue, base[0]), resolve(saturation, base[1]), resolve(lightness, base[2])]).map(function (channel) {\n        return Math.round(channel * 255);\n      }),\n          _hsluv_1$hsluvToRgb$m2 = _slicedToArray(_hsluv_1$hsluvToRgb$m, 3),\n          red = _hsluv_1$hsluvToRgb$m2[0],\n          green = _hsluv_1$hsluvToRgb$m2[1],\n          blue = _hsluv_1$hsluvToRgb$m2[2];\n\n      return Object.assign(Object.assign({}, accumulator), _defineProperty({}, name, \"rgba(\".concat(red, \", \").concat(green, \", \").concat(blue, \", \").concat(alpha, \")\")));\n    }, {}));\n  }))));\n}\n\nexports.colorFactory = colorFactory;","map":{"version":3,"sources":["/home/hoangdev/Desktop/front.test/node_modules/@shopify/polaris-tokens/dist-modern/color-factory.js"],"names":["Object","defineProperty","exports","value","colorFactory","tslib_1","require","hsluv_1","base_1","theme","scheme","config","assign","entries","map","role","hex","base","hexToHsluv","variants","reduce","accumulator","_a","name","settings","__rest","hue","saturation","lightness","alpha","resolve","baseToResolve","hsluvToRgb","channel","Math","round","red","green","blue"],"mappings":"AAAA;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,OAAD,CAAvB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,gBAAD,CAAtB;;AACA,SAASF,YAAT,CAAsBK,KAAtB,EAA6BC,MAA7B,EAA6D;AAAA,MAAxBC,MAAwB,uEAAfH,MAAM,CAACG,MAAQ;AACzD,SAAOX,MAAM,CAACY,MAAP,OAAAZ,MAAM,GAAQ,EAAR,4BAAeA,MAAM,CAACa,OAAP,CAAeJ,KAAf,EAAsBK,GAAtB,CAA0B,gBAAiB;AAAA;AAAA,QAAfC,IAAe;AAAA,QAATC,GAAS;;AACnE,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzB,aAAO,IAAP;AACH;;AACD,QAAMC,IAAI,GAAGV,OAAO,CAACW,UAAR,CAAmBF,GAAnB,CAAb;AACA,QAAMG,QAAQ,GAAGR,MAAM,CAACI,IAAD,CAAN,IAAgB,EAAjC;AACA,WAAOf,MAAM,CAACY,MAAP,CAAc,EAAd,EAAkBO,QAAQ,CAACC,MAAT,CAAgB,UAACC,WAAD,EAAcC,EAAd,EAAqB;AACtD,UAAEC,IAAF,GAAWD,EAAX,CAAEC,IAAF;AAAA,UAAeC,QAAf,GAA0BnB,OAAO,CAACoB,MAAR,CAAeH,EAAf,EAAmB,CAAC,MAAD,CAAnB,CAA1B;;AADsD,6BAEuBE,QAAQ,CAACd,MAAD,CAF/B;AAAA,kDAElDgB,GAFkD;AAAA,UAElDA,GAFkD,qCAE5CT,IAAI,CAAC,CAAD,CAFwC;AAAA,mDAEnCU,UAFmC;AAAA,UAEnCA,UAFmC,sCAEtBV,IAAI,CAAC,CAAD,CAFkB;AAAA,mDAEbW,SAFa;AAAA,UAEbA,SAFa,sCAEDX,IAAI,CAAC,CAAD,CAFH;AAAA,mDAEQY,KAFR;AAAA,UAEQA,KAFR,sCAEgB,CAFhB;;AAG1D,UAAMC,OAAO,GAAG,SAAVA,OAAU,CAAC3B,KAAD,EAAQ4B,aAAR,EAA0B;AACtC,eAAO,OAAO5B,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4B,aAAD,CAAhD;AACH,OAFD;;AAH0D,kCAM/BxB,OAAO,CAACyB,UAAR,CAAmB,CAC1CF,OAAO,CAACJ,GAAD,EAAMT,IAAI,CAAC,CAAD,CAAV,CADmC,EAE1Ca,OAAO,CAACH,UAAD,EAAaV,IAAI,CAAC,CAAD,CAAjB,CAFmC,EAG1Ca,OAAO,CAACF,SAAD,EAAYX,IAAI,CAAC,CAAD,CAAhB,CAHmC,CAAnB,EAIxBH,GAJwB,CAIpB,UAACmB,OAAD;AAAA,eAAaC,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,GAArB,CAAb;AAAA,OAJoB,CAN+B;AAAA;AAAA,UAMnDG,GANmD;AAAA,UAM9CC,KAN8C;AAAA,UAMvCC,IANuC;;AAW1D,aAAOtC,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAc,EAAd,EAAkBS,WAAlB,CAAd,sBAAiDE,IAAjD,iBAAgEa,GAAhE,eAAwEC,KAAxE,eAAkFC,IAAlF,eAA2FT,KAA3F,QAAP;AACH,KAZwB,EAYtB,EAZsB,CAAlB,CAAP;AAaH,GAnB2B,CAAf,GAAb;AAoBH;;AACD3B,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.colorFactory = void 0;\nconst tslib_1 = require(\"tslib\");\nconst hsluv_1 = require(\"hsluv\");\nconst base_1 = require(\"./configs/base\");\nfunction colorFactory(theme, scheme, config = base_1.config) {\n    return Object.assign({}, ...Object.entries(theme).map(([role, hex]) => {\n        if (typeof hex !== 'string') {\n            return null;\n        }\n        const base = hsluv_1.hexToHsluv(hex);\n        const variants = config[role] || [];\n        return Object.assign({}, variants.reduce((accumulator, _a) => {\n            var { name } = _a, settings = tslib_1.__rest(_a, [\"name\"]);\n            const { hue = base[0], saturation = base[1], lightness = base[2], alpha = 1, } = settings[scheme];\n            const resolve = (value, baseToResolve) => {\n                return typeof value === 'number' ? value : value(baseToResolve);\n            };\n            const [red, green, blue] = hsluv_1.hsluvToRgb([\n                resolve(hue, base[0]),\n                resolve(saturation, base[1]),\n                resolve(lightness, base[2]),\n            ]).map((channel) => Math.round(channel * 255));\n            return Object.assign(Object.assign({}, accumulator), { [name]: `rgba(${red}, ${green}, ${blue}, ${alpha})` });\n        }, {}));\n    }));\n}\nexports.colorFactory = colorFactory;\n"]},"metadata":{},"sourceType":"script"}