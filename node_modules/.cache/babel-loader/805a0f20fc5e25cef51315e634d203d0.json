{"ast":null,"code":"import _slicedToArray from \"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React$1, { useMemo, useCallback } from 'react';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { getWeeksForMonth, getOrderedWeekdays, getNewRange, isDateBefore, isDateAfter, isSameDay, dateIsSelected, dateIsInRange } from '../../../../utilities/dates.js';\nimport { weekdayName, monthName } from '../../utilities.js';\nimport styles from '../../DatePicker.scss.js';\nimport { Day as Day$1 } from '../Day/Day.js';\nimport { Weekday as Weekday$1 } from '../Weekday/Weekday.js';\n\nfunction Month(_ref) {\n  var focusedDate = _ref.focusedDate,\n      selected = _ref.selected,\n      hoverDate = _ref.hoverDate,\n      disableDatesBefore = _ref.disableDatesBefore,\n      disableDatesAfter = _ref.disableDatesAfter,\n      allowRange = _ref.allowRange,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      _ref$onHover = _ref.onHover,\n      onHover = _ref$onHover === void 0 ? noop : _ref$onHover,\n      _ref$onFocus = _ref.onFocus,\n      onFocus = _ref$onFocus === void 0 ? noop : _ref$onFocus,\n      month = _ref.month,\n      year = _ref.year,\n      weekStartsOn = _ref.weekStartsOn,\n      accessibilityLabelPrefixes = _ref.accessibilityLabelPrefixes;\n  var i18n = useI18n();\n  var isInHoveringRange = allowRange ? hoveringDateIsInRange : function () {\n    return false;\n  };\n  var now = new Date();\n  var current = now.getMonth() === month && now.getFullYear() === year;\n  var className = classNames(styles.Title, current && styles['Month-current']);\n  var weeks = useMemo(function () {\n    return getWeeksForMonth(month, year, weekStartsOn);\n  }, [month, weekStartsOn, year]);\n  var weekdays = getOrderedWeekdays(weekStartsOn).map(function (weekday) {\n    return /*#__PURE__*/React$1.createElement(Weekday$1, {\n      key: weekday,\n      title: i18n.translate(\"Polaris.DatePicker.daysAbbreviated.\".concat(weekdayName(weekday))),\n      label: weekdayLabel(weekday),\n      current: current && new Date().getDay() === weekday\n    });\n  });\n  var handleDateClick = useCallback(function (selectedDate) {\n    onChange(getNewRange(allowRange ? selected : undefined, selectedDate));\n  }, [allowRange, onChange, selected]);\n  var lastDayOfMonth = useMemo(function () {\n    return new Date(year, month + 1, 0);\n  }, [month, year]);\n\n  function renderWeek(day, dayIndex) {\n    if (day == null) {\n      return /*#__PURE__*/React$1.createElement(Day$1, {\n        key: dayIndex,\n        onHover: onHover,\n        lastDayOfMonth: lastDayOfMonth\n      });\n    }\n\n    var disabled = disableDatesBefore && isDateBefore(day, disableDatesBefore) || disableDatesAfter && isDateAfter(day, disableDatesAfter);\n    var isFirstSelectedDay = allowRange && selected && isDateStart(day, selected);\n    var isLastSelectedDay = allowRange && selected && (!isSameDay(selected.start, selected.end) && isDateEnd(day, selected) || hoverDate && isSameDay(selected.start, selected.end) && isDateAfter(hoverDate, selected.start) && isSameDay(day, hoverDate) && !isFirstSelectedDay);\n    var rangeIsDifferent = !(selected && isSameDay(selected.start, selected.end));\n    var isHoveringRight = hoverDate && isDateBefore(day, hoverDate);\n\n    var _accessibilityLabelPr = _slicedToArray(accessibilityLabelPrefixes, 2),\n        firstAccessibilityLabelPrefix = _accessibilityLabelPr[0],\n        lastAccessibilityLabelPrefix = _accessibilityLabelPr[1];\n\n    var accessibilityLabelPrefix;\n\n    if (allowRange && isFirstSelectedDay || !allowRange && firstAccessibilityLabelPrefix) {\n      accessibilityLabelPrefix = firstAccessibilityLabelPrefix;\n    } else if (allowRange && isLastSelectedDay) {\n      accessibilityLabelPrefix = lastAccessibilityLabelPrefix;\n    }\n\n    return /*#__PURE__*/React$1.createElement(Day$1, {\n      selectedAccessibilityLabelPrefix: accessibilityLabelPrefix,\n      weekday: weekdayLabel(dayIndex),\n      focused: focusedDate != null && isSameDay(day, focusedDate),\n      day: day,\n      key: dayIndex,\n      onFocus: onFocus,\n      onClick: handleDateClick,\n      onHover: onHover,\n      selected: selected != null && dateIsSelected(day, selected),\n      inRange: selected != null && dateIsInRange(day, selected),\n      disabled: disabled,\n      inHoveringRange: selected != null && hoverDate != null && isInHoveringRange(day, selected, hoverDate),\n      isLastSelectedDay: isLastSelectedDay,\n      isFirstSelectedDay: isFirstSelectedDay,\n      isHoveringRight: isHoveringRight,\n      rangeIsDifferent: rangeIsDifferent\n    });\n  }\n\n  var weeksMarkup = weeks.map(function (week, index) {\n    return /*#__PURE__*/React$1.createElement(\"tr\", {\n      className: styles.Week,\n      key: index\n    }, week.map(renderWeek));\n  });\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.MonthContainer\n  }, /*#__PURE__*/React$1.createElement(\"table\", {\n    role: \"grid\",\n    className: styles.Month\n  }, /*#__PURE__*/React$1.createElement(\"caption\", {\n    className: className\n  }, i18n.translate(\"Polaris.DatePicker.months.\".concat(monthName(month))), ' ', year), /*#__PURE__*/React$1.createElement(\"thead\", null, /*#__PURE__*/React$1.createElement(\"tr\", {\n    className: styles.WeekHeadings\n  }, weekdays)), /*#__PURE__*/React$1.createElement(\"tbody\", null, weeksMarkup)));\n\n  function weekdayLabel(weekday) {\n    return i18n.translate(\"Polaris.DatePicker.days.\".concat(weekdayName(weekday)));\n  }\n}\n\nfunction noop() {}\n\nfunction hoveringDateIsInRange(day, range, hoverEndDate) {\n  if (day == null) {\n    return false;\n  }\n\n  var start = range.start,\n      end = range.end;\n  return Boolean(isSameDay(start, end) && day > start && day <= hoverEndDate);\n}\n\nfunction isDateEnd(day, range) {\n  if (day == null) return false;\n  var end = range.end;\n  return Boolean(end && isSameDay(end, day));\n}\n\nfunction isDateStart(day, range) {\n  if (day == null) return false;\n  var start = range.start;\n  return Boolean(start && isSameDay(start, day));\n}\n\nexport { Month };","map":{"version":3,"sources":["/home/hoangdev/Desktop/front.test/node_modules/@shopify/polaris/dist/esm/components/DatePicker/components/Month/Month.js"],"names":["React$1","useMemo","useCallback","useI18n","classNames","getWeeksForMonth","getOrderedWeekdays","getNewRange","isDateBefore","isDateAfter","isSameDay","dateIsSelected","dateIsInRange","weekdayName","monthName","styles","Day","Day$1","Weekday","Weekday$1","Month","focusedDate","selected","hoverDate","disableDatesBefore","disableDatesAfter","allowRange","onChange","noop","onHover","onFocus","month","year","weekStartsOn","accessibilityLabelPrefixes","i18n","isInHoveringRange","hoveringDateIsInRange","now","Date","current","getMonth","getFullYear","className","Title","weeks","weekdays","map","weekday","createElement","key","title","translate","label","weekdayLabel","getDay","handleDateClick","selectedDate","undefined","lastDayOfMonth","renderWeek","day","dayIndex","disabled","isFirstSelectedDay","isDateStart","isLastSelectedDay","start","end","isDateEnd","rangeIsDifferent","isHoveringRight","firstAccessibilityLabelPrefix","lastAccessibilityLabelPrefix","accessibilityLabelPrefix","selectedAccessibilityLabelPrefix","focused","onClick","inRange","inHoveringRange","weeksMarkup","week","index","Week","MonthContainer","role","WeekHeadings","range","hoverEndDate","Boolean"],"mappings":"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","sourcesContent":["import React$1, { useMemo, useCallback } from 'react';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { classNames } from '../../../../utilities/css.js';\nimport { getWeeksForMonth, getOrderedWeekdays, getNewRange, isDateBefore, isDateAfter, isSameDay, dateIsSelected, dateIsInRange } from '../../../../utilities/dates.js';\nimport { weekdayName, monthName } from '../../utilities.js';\nimport styles from '../../DatePicker.scss.js';\nimport { Day as Day$1 } from '../Day/Day.js';\nimport { Weekday as Weekday$1 } from '../Weekday/Weekday.js';\n\nfunction Month({\n  focusedDate,\n  selected,\n  hoverDate,\n  disableDatesBefore,\n  disableDatesAfter,\n  allowRange,\n  onChange = noop,\n  onHover = noop,\n  onFocus = noop,\n  month,\n  year,\n  weekStartsOn,\n  accessibilityLabelPrefixes\n}) {\n  const i18n = useI18n();\n  const isInHoveringRange = allowRange ? hoveringDateIsInRange : () => false;\n  const now = new Date();\n  const current = now.getMonth() === month && now.getFullYear() === year;\n  const className = classNames(styles.Title, current && styles['Month-current']);\n  const weeks = useMemo(() => getWeeksForMonth(month, year, weekStartsOn), [month, weekStartsOn, year]);\n  const weekdays = getOrderedWeekdays(weekStartsOn).map(weekday => /*#__PURE__*/React$1.createElement(Weekday$1, {\n    key: weekday,\n    title: i18n.translate(`Polaris.DatePicker.daysAbbreviated.${weekdayName(weekday)}`),\n    label: weekdayLabel(weekday),\n    current: current && new Date().getDay() === weekday\n  }));\n  const handleDateClick = useCallback(selectedDate => {\n    onChange(getNewRange(allowRange ? selected : undefined, selectedDate));\n  }, [allowRange, onChange, selected]);\n  const lastDayOfMonth = useMemo(() => new Date(year, month + 1, 0), [month, year]);\n\n  function renderWeek(day, dayIndex) {\n    if (day == null) {\n      return /*#__PURE__*/React$1.createElement(Day$1, {\n        key: dayIndex,\n        onHover: onHover,\n        lastDayOfMonth: lastDayOfMonth\n      });\n    }\n\n    const disabled = disableDatesBefore && isDateBefore(day, disableDatesBefore) || disableDatesAfter && isDateAfter(day, disableDatesAfter);\n    const isFirstSelectedDay = allowRange && selected && isDateStart(day, selected);\n    const isLastSelectedDay = allowRange && selected && (!isSameDay(selected.start, selected.end) && isDateEnd(day, selected) || hoverDate && isSameDay(selected.start, selected.end) && isDateAfter(hoverDate, selected.start) && isSameDay(day, hoverDate) && !isFirstSelectedDay);\n    const rangeIsDifferent = !(selected && isSameDay(selected.start, selected.end));\n    const isHoveringRight = hoverDate && isDateBefore(day, hoverDate);\n    const [firstAccessibilityLabelPrefix, lastAccessibilityLabelPrefix] = accessibilityLabelPrefixes;\n    let accessibilityLabelPrefix;\n\n    if (allowRange && isFirstSelectedDay || !allowRange && firstAccessibilityLabelPrefix) {\n      accessibilityLabelPrefix = firstAccessibilityLabelPrefix;\n    } else if (allowRange && isLastSelectedDay) {\n      accessibilityLabelPrefix = lastAccessibilityLabelPrefix;\n    }\n\n    return /*#__PURE__*/React$1.createElement(Day$1, {\n      selectedAccessibilityLabelPrefix: accessibilityLabelPrefix,\n      weekday: weekdayLabel(dayIndex),\n      focused: focusedDate != null && isSameDay(day, focusedDate),\n      day: day,\n      key: dayIndex,\n      onFocus: onFocus,\n      onClick: handleDateClick,\n      onHover: onHover,\n      selected: selected != null && dateIsSelected(day, selected),\n      inRange: selected != null && dateIsInRange(day, selected),\n      disabled: disabled,\n      inHoveringRange: selected != null && hoverDate != null && isInHoveringRange(day, selected, hoverDate),\n      isLastSelectedDay: isLastSelectedDay,\n      isFirstSelectedDay: isFirstSelectedDay,\n      isHoveringRight: isHoveringRight,\n      rangeIsDifferent: rangeIsDifferent\n    });\n  }\n\n  const weeksMarkup = weeks.map((week, index) => /*#__PURE__*/React$1.createElement(\"tr\", {\n    className: styles.Week,\n    key: index\n  }, week.map(renderWeek)));\n  return /*#__PURE__*/React$1.createElement(\"div\", {\n    className: styles.MonthContainer\n  }, /*#__PURE__*/React$1.createElement(\"table\", {\n    role: \"grid\",\n    className: styles.Month\n  }, /*#__PURE__*/React$1.createElement(\"caption\", {\n    className: className\n  }, i18n.translate(`Polaris.DatePicker.months.${monthName(month)}`), ' ', year), /*#__PURE__*/React$1.createElement(\"thead\", null, /*#__PURE__*/React$1.createElement(\"tr\", {\n    className: styles.WeekHeadings\n  }, weekdays)), /*#__PURE__*/React$1.createElement(\"tbody\", null, weeksMarkup)));\n\n  function weekdayLabel(weekday) {\n    return i18n.translate(`Polaris.DatePicker.days.${weekdayName(weekday)}`);\n  }\n}\n\nfunction noop() {}\n\nfunction hoveringDateIsInRange(day, range, hoverEndDate) {\n  if (day == null) {\n    return false;\n  }\n\n  const {\n    start,\n    end\n  } = range;\n  return Boolean(isSameDay(start, end) && day > start && day <= hoverEndDate);\n}\n\nfunction isDateEnd(day, range) {\n  if (day == null) return false;\n  const {\n    end\n  } = range;\n  return Boolean(end && isSameDay(end, day));\n}\n\nfunction isDateStart(day, range) {\n  if (day == null) return false;\n  const {\n    start\n  } = range;\n  return Boolean(start && isSameDay(start, day));\n}\n\nexport { Month };\n"]},"metadata":{},"sourceType":"module"}