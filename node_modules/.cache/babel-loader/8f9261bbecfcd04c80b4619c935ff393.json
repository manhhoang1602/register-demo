{"ast":null,"code":"import _slicedToArray from \"/home/hoangdev/Desktop/front.test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React$1, { useState, useRef, useCallback } from 'react';\nimport { useI18n } from '../../../../../../utilities/i18n/hooks.js';\nimport { Popover as Popover$1 } from '../../../../../Popover/Popover.js';\nimport { Button as Button$1 } from '../../../../../Button/Button.js';\nimport { useToggle as useToggle$1 } from '../../../../../../utilities/use-toggle.js';\nimport { Form as Form$1 } from '../../../../../Form/Form.js';\nimport { FormLayout as FormLayout$1 } from '../../../../../FormLayout/FormLayout.js';\nimport { Select as Select$1 } from '../../../../../Select/Select.js';\nimport { FilterValueSelector as FilterValueSelector$1 } from '../FilterValueSelector/FilterValueSelector.js';\n\nfunction FilterCreator(_ref) {\n  var filters = _ref.filters,\n      resourceName = _ref.resourceName,\n      disabled = _ref.disabled,\n      onAddFilter = _ref.onAddFilter;\n\n  var _useToggle$ = useToggle$1(false),\n      popoverActive = _useToggle$.value,\n      togglePopoverActive = _useToggle$.toggle,\n      setPopoverActiveFalse = _useToggle$.setFalse;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedFilter = _useState2[0],\n      setSelectedFilter = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedFilterKey = _useState4[0],\n      setSelectedFilterKey = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedFilterValue = _useState6[0],\n      setSelectedFilterValue = _useState6[1];\n\n  var i18n = useI18n();\n  var node = useRef(null);\n  var canAddFilter = Boolean(selectedFilter && selectedFilterKey && selectedFilterValue);\n  var handleButtonFocus = useCallback(function () {\n    var event = arguments.length <= 0 ? undefined : arguments[0];\n\n    if (!node.current && event) {\n      node.current = event.target;\n    }\n  }, []);\n  var handleFilterKeyChange = useCallback(function (filterKey) {\n    var foundFilter = filters.find(function (filter) {\n      var minKey = filter.minKey,\n          maxKey = filter.maxKey,\n          operatorText = filter.operatorText;\n\n      if (minKey || maxKey) {\n        return filter.key === filterKey || minKey === filterKey || maxKey === filterKey;\n      }\n\n      if (operatorText && typeof operatorText !== 'string') {\n        return filter.key === filterKey || operatorText.filter(function (_ref2) {\n          var key = _ref2.key;\n          return key === filterKey;\n        }).length === 1;\n      }\n\n      return filter.key === filterKey;\n    });\n\n    if (!foundFilter) {\n      return;\n    }\n\n    setSelectedFilter(foundFilter);\n    setSelectedFilterKey(filterKey);\n    setSelectedFilterValue(undefined);\n  }, [filters]);\n  var handleFilterValueChange = useCallback(function (value) {\n    setSelectedFilterValue(value);\n  }, []);\n  var handleAddFilter = useCallback(function () {\n    if (!onAddFilter || !canAddFilter || !selectedFilterKey) {\n      return;\n    }\n\n    onAddFilter({\n      key: selectedFilterKey,\n      value: selectedFilterValue || ''\n    });\n    setPopoverActiveFalse();\n    setSelectedFilter(undefined);\n    setSelectedFilterValue(undefined);\n\n    if (node.current != null) {\n      node.current.focus();\n    }\n  }, [canAddFilter, onAddFilter, selectedFilterKey, selectedFilterValue, setPopoverActiveFalse]);\n  var activator = /*#__PURE__*/React$1.createElement(Button$1, {\n    onClick: togglePopoverActive,\n    disclosure: true,\n    disabled: disabled,\n    onFocus: handleButtonFocus\n  }, i18n.translate('Polaris.ResourceList.FilterCreator.filterButtonLabel'));\n  var filterOptions = filters.map(function (_ref3) {\n    var key = _ref3.key,\n        label = _ref3.label;\n    return {\n      value: key,\n      label: label\n    };\n  });\n  var filterValueSelectionMarkup = selectedFilter ? /*#__PURE__*/React$1.createElement(FilterValueSelector$1, {\n    filter: selectedFilter,\n    filterKey: selectedFilterKey,\n    value: selectedFilterValue,\n    onFilterKeyChange: handleFilterKeyChange,\n    onChange: handleFilterValueChange\n  }) : null;\n  var addFilterButtonMarkup = selectedFilter ? /*#__PURE__*/React$1.createElement(Button$1, {\n    onClick: handleAddFilter,\n    disabled: !canAddFilter\n  }, i18n.translate('Polaris.ResourceList.FilterCreator.addFilterButtonLabel')) : null;\n  return /*#__PURE__*/React$1.createElement(Popover$1, {\n    active: popoverActive,\n    activator: activator,\n    onClose: togglePopoverActive,\n    sectioned: true,\n    fullHeight: true\n  }, /*#__PURE__*/React$1.createElement(Form$1, {\n    onSubmit: handleAddFilter\n  }, /*#__PURE__*/React$1.createElement(FormLayout$1, null, /*#__PURE__*/React$1.createElement(Select$1, {\n    label: i18n.translate('Polaris.ResourceList.FilterCreator.showAllWhere', {\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    }),\n    placeholder: i18n.translate('Polaris.ResourceList.FilterCreator.selectFilterKeyPlaceholder'),\n    options: filterOptions,\n    onChange: handleFilterKeyChange,\n    value: selectedFilter && selectedFilter.key\n  }), filterValueSelectionMarkup, addFilterButtonMarkup)));\n}\n\nexport { FilterCreator };","map":{"version":3,"sources":["/home/hoangdev/Desktop/front.test/node_modules/@shopify/polaris/dist/esm/components/ResourceList/components/FilterControl/components/FilterCreator/FilterCreator.js"],"names":["React$1","useState","useRef","useCallback","useI18n","Popover","Popover$1","Button","Button$1","useToggle","useToggle$1","Form","Form$1","FormLayout","FormLayout$1","Select","Select$1","FilterValueSelector","FilterValueSelector$1","FilterCreator","filters","resourceName","disabled","onAddFilter","popoverActive","value","togglePopoverActive","toggle","setPopoverActiveFalse","setFalse","selectedFilter","setSelectedFilter","selectedFilterKey","setSelectedFilterKey","selectedFilterValue","setSelectedFilterValue","i18n","node","canAddFilter","Boolean","handleButtonFocus","event","current","target","handleFilterKeyChange","filterKey","foundFilter","find","filter","minKey","maxKey","operatorText","key","length","undefined","handleFilterValueChange","handleAddFilter","focus","activator","createElement","onClick","disclosure","onFocus","translate","filterOptions","map","label","filterValueSelectionMarkup","onFilterKeyChange","onChange","addFilterButtonMarkup","active","onClose","sectioned","fullHeight","onSubmit","resourceNamePlural","plural","toLocaleLowerCase","placeholder","options"],"mappings":"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","sourcesContent":["import React$1, { useState, useRef, useCallback } from 'react';\nimport { useI18n } from '../../../../../../utilities/i18n/hooks.js';\nimport { Popover as Popover$1 } from '../../../../../Popover/Popover.js';\nimport { Button as Button$1 } from '../../../../../Button/Button.js';\nimport { useToggle as useToggle$1 } from '../../../../../../utilities/use-toggle.js';\nimport { Form as Form$1 } from '../../../../../Form/Form.js';\nimport { FormLayout as FormLayout$1 } from '../../../../../FormLayout/FormLayout.js';\nimport { Select as Select$1 } from '../../../../../Select/Select.js';\nimport { FilterValueSelector as FilterValueSelector$1 } from '../FilterValueSelector/FilterValueSelector.js';\n\nfunction FilterCreator({\n  filters,\n  resourceName,\n  disabled,\n  onAddFilter\n}) {\n  const {\n    value: popoverActive,\n    toggle: togglePopoverActive,\n    setFalse: setPopoverActiveFalse\n  } = useToggle$1(false);\n  const [selectedFilter, setSelectedFilter] = useState();\n  const [selectedFilterKey, setSelectedFilterKey] = useState();\n  const [selectedFilterValue, setSelectedFilterValue] = useState();\n  const i18n = useI18n();\n  const node = useRef(null);\n  const canAddFilter = Boolean(selectedFilter && selectedFilterKey && selectedFilterValue);\n  const handleButtonFocus = useCallback((...args) => {\n    const event = args[0];\n\n    if (!node.current && event) {\n      node.current = event.target;\n    }\n  }, []);\n  const handleFilterKeyChange = useCallback(filterKey => {\n    const foundFilter = filters.find(filter => {\n      const {\n        minKey,\n        maxKey,\n        operatorText\n      } = filter;\n\n      if (minKey || maxKey) {\n        return filter.key === filterKey || minKey === filterKey || maxKey === filterKey;\n      }\n\n      if (operatorText && typeof operatorText !== 'string') {\n        return filter.key === filterKey || operatorText.filter(({\n          key\n        }) => key === filterKey).length === 1;\n      }\n\n      return filter.key === filterKey;\n    });\n\n    if (!foundFilter) {\n      return;\n    }\n\n    setSelectedFilter(foundFilter);\n    setSelectedFilterKey(filterKey);\n    setSelectedFilterValue(undefined);\n  }, [filters]);\n  const handleFilterValueChange = useCallback(value => {\n    setSelectedFilterValue(value);\n  }, []);\n  const handleAddFilter = useCallback(() => {\n    if (!onAddFilter || !canAddFilter || !selectedFilterKey) {\n      return;\n    }\n\n    onAddFilter({\n      key: selectedFilterKey,\n      value: selectedFilterValue || ''\n    });\n    setPopoverActiveFalse();\n    setSelectedFilter(undefined);\n    setSelectedFilterValue(undefined);\n\n    if (node.current != null) {\n      node.current.focus();\n    }\n  }, [canAddFilter, onAddFilter, selectedFilterKey, selectedFilterValue, setPopoverActiveFalse]);\n  const activator = /*#__PURE__*/React$1.createElement(Button$1, {\n    onClick: togglePopoverActive,\n    disclosure: true,\n    disabled: disabled,\n    onFocus: handleButtonFocus\n  }, i18n.translate('Polaris.ResourceList.FilterCreator.filterButtonLabel'));\n  const filterOptions = filters.map(({\n    key,\n    label\n  }) => ({\n    value: key,\n    label\n  }));\n  const filterValueSelectionMarkup = selectedFilter ? /*#__PURE__*/React$1.createElement(FilterValueSelector$1, {\n    filter: selectedFilter,\n    filterKey: selectedFilterKey,\n    value: selectedFilterValue,\n    onFilterKeyChange: handleFilterKeyChange,\n    onChange: handleFilterValueChange\n  }) : null;\n  const addFilterButtonMarkup = selectedFilter ? /*#__PURE__*/React$1.createElement(Button$1, {\n    onClick: handleAddFilter,\n    disabled: !canAddFilter\n  }, i18n.translate('Polaris.ResourceList.FilterCreator.addFilterButtonLabel')) : null;\n  return /*#__PURE__*/React$1.createElement(Popover$1, {\n    active: popoverActive,\n    activator: activator,\n    onClose: togglePopoverActive,\n    sectioned: true,\n    fullHeight: true\n  }, /*#__PURE__*/React$1.createElement(Form$1, {\n    onSubmit: handleAddFilter\n  }, /*#__PURE__*/React$1.createElement(FormLayout$1, null, /*#__PURE__*/React$1.createElement(Select$1, {\n    label: i18n.translate('Polaris.ResourceList.FilterCreator.showAllWhere', {\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    }),\n    placeholder: i18n.translate('Polaris.ResourceList.FilterCreator.selectFilterKeyPlaceholder'),\n    options: filterOptions,\n    onChange: handleFilterKeyChange,\n    value: selectedFilter && selectedFilter.key\n  }), filterValueSelectionMarkup, addFilterButtonMarkup)));\n}\n\nexport { FilterCreator };\n"]},"metadata":{},"sourceType":"module"}