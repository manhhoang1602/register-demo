{"ast":null,"code":"import { makeObservable, observable, action } from \"mobx\";\nimport axios from \"axios\";\n\nclass BaseService {\n  constructor(type, mes, statusPushMes, statusLoading) {\n    this.type = void 0;\n    this.mes = void 0;\n    this.statusPushMes = void 0;\n    this.statusLoading = void 0;\n    makeObservable(this, {\n      type: observable,\n      mes: observable,\n      statusPushMes: observable,\n      statusLoading: observable,\n      pushNotify: action,\n      setStatusLoading: action\n    });\n    this.type = type;\n    this.mes = mes;\n    this.statusPushMes = statusPushMes;\n    this.statusLoading = statusLoading;\n  }\n\n  pushNotify(type, mes) {\n    this.type = type;\n    this.mes = mes;\n    this.statusPushMes = true;\n    setTimeout(() => {\n      this.statusPushMes = false;\n    }, 2000);\n  }\n\n  setStatusLoading(status) {\n    this.statusLoading = status;\n  }\n\n}\n\nexport const getRequest = async (method, url) => {\n  let res = await axios({\n    method: 'get',\n    url: url\n  });\n  return;\n};\nexport default new BaseService('info', 'no mes', false, false);","map":{"version":3,"sources":["/home/hoangdev/Desktop/front.test/src/commons/services/BaseService.ts"],"names":["makeObservable","observable","action","axios","BaseService","constructor","type","mes","statusPushMes","statusLoading","pushNotify","setStatusLoading","setTimeout","status","getRequest","method","url","res"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,UAAxB,EAAoCC,MAApC,QAAiD,MAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,CAAkB;AAMdC,EAAAA,WAAW,CAACC,IAAD,EAAiDC,GAAjD,EAA8DC,aAA9D,EAAsFC,aAAtF,EAA8G;AAAA,SALzHH,IAKyH;AAAA,SAJzHC,GAIyH;AAAA,SAHzHC,aAGyH;AAAA,SAFzHC,aAEyH;AACrHT,IAAAA,cAAc,CAAC,IAAD,EAAO;AACjBM,MAAAA,IAAI,EAAEL,UADW;AAEjBM,MAAAA,GAAG,EAAEN,UAFY;AAGjBO,MAAAA,aAAa,EAAEP,UAHE;AAIjBQ,MAAAA,aAAa,EAAER,UAJE;AAMjBS,MAAAA,UAAU,EAAER,MANK;AAOjBS,MAAAA,gBAAgB,EAAET;AAPD,KAAP,CAAd;AASA,SAAKI,IAAL,GAAYA,IAAZ;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACH;;AAEDC,EAAAA,UAAU,CAACJ,IAAD,EAAiDC,GAAjD,EAA8D;AACpE,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,aAAL,GAAqB,IAArB;AACAI,IAAAA,UAAU,CAAC,MAAM;AACb,WAAKJ,aAAL,GAAqB,KAArB;AACH,KAFS,EAEP,IAFO,CAAV;AAGH;;AAEDG,EAAAA,gBAAgB,CAACE,MAAD,EAAkB;AAC9B,SAAKJ,aAAL,GAAqBI,MAArB;AACH;;AAjCa;;AAyClB,OAAO,MAAMC,UAAU,GAAG,OAAOC,MAAP,EAA4DC,GAA5D,KAAoG;AAC1H,MAAIC,GAA0B,GAAG,MAAMd,KAAK,CAAC;AACzCY,IAAAA,MAAM,EAAE,KADiC;AAEzCC,IAAAA,GAAG,EAAEA;AAFoC,GAAD,CAA5C;AAIA;AACH,CANM;AAQP,eAAe,IAAIZ,WAAJ,CAAgB,MAAhB,EAAwB,QAAxB,EAAkC,KAAlC,EAAyC,KAAzC,CAAf","sourcesContent":["import {makeObservable, observable, action} from \"mobx\";\nimport axios from \"axios\";\n\nclass BaseService {\n    type: 'info' | 'warring' | 'error' | 'success';\n    mes: string;\n    statusPushMes: boolean;\n    statusLoading: boolean;\n\n    constructor(type: 'info' | 'warring' | 'error' | 'success', mes: string, statusPushMes: boolean, statusLoading: boolean) {\n        makeObservable(this, {\n            type: observable,\n            mes: observable,\n            statusPushMes: observable,\n            statusLoading: observable,\n\n            pushNotify: action,\n            setStatusLoading: action,\n        })\n        this.type = type;\n        this.mes = mes;\n        this.statusPushMes = statusPushMes;\n        this.statusLoading = statusLoading;\n    }\n\n    pushNotify(type: 'info' | 'warring' | 'error' | 'success', mes: string) {\n        this.type = type;\n        this.mes = mes;\n        this.statusPushMes = true;\n        setTimeout(() => {\n            this.statusPushMes = false;\n        }, 2000);\n    }\n\n    setStatusLoading(status: boolean) {\n        this.statusLoading = status;\n    }\n}\n\nexport interface IApiRes<T> {\n    status: number\n    body: T\n}\n\nexport const getRequest = async (method: 'get' | 'post' | 'put' | 'patch' | 'delete', url: string) : Promise<IApiRes<any>> => {\n    let res: Promise<IApiRes<any>> = await axios({\n        method: 'get',\n        url: url,\n    })\n    return\n}\n\nexport default new BaseService('info', 'no mes', false, false);"]},"metadata":{},"sourceType":"module"}