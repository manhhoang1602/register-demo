{"ast":null,"code":"var _jsxFileName = \"/home/hoangdev/Desktop/front.test/src/modules/user/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Card, Page } from '@shopify/polaris';\nimport { useEffect, useState } from \"react\";\nimport { getListUser } from \"../../api/User\";\nimport './index.scss';\nimport BaseService from \"../../commons/services/BaseService\";\nimport { GoogleMap, Marker, withGoogleMap } from \"react-google-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListUser = () => {\n  _s();\n\n  const [listUser, setListUser] = useState([]);\n  const [page, setPage] = useState(0);\n\n  const getUsers = async page => {\n    try {\n      BaseService.setStatusLoading(true);\n      const res = await getListUser(`https://fakestoreapi.com/users?page=${page}&limit=5`);\n\n      if (res.status === 200) {\n        BaseService.setStatusLoading(false);\n        setListUser(res.body);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const cardItem = item => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sectioned: true,\n        title: item.username,\n        actions: [{\n          content: 'Check google map'\n        }],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: 75,\n              width: 75,\n              borderRadius: '50%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              backgroundColor: '#0093E9',\n              backgroundImage: 'linear-gradient(160deg, #0093E9 0%, #80D0C7 100%)',\n              color: 'white',\n              fontWeight: 'bold',\n              fontSize: 24\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.name.firstname[0].toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: \"bold\",\n                textTransform: 'capitalize'\n              },\n              children: [item.name.firstname, \" \", item.name.lastname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [item.address.city, \", \", item.address.number, \" \", item.address.street]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  };\n\n  useEffect(() => {\n    getUsers(page);\n  }, [page]);\n  const MyMapComponent = withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n    defaultZoom: 8,\n    defaultCenter: {\n      lat: -34.397,\n      lng: 150.644\n    },\n    children: props.isMarkerShown && /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: -34.397,\n        lng: 150.644\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Page, {\n    narrowWidth: true,\n    breadcrumbs: [{\n      content: 'Orders',\n      url: '/register'\n    }],\n    title: \"List user\",\n    pagination: {\n      onPrevious() {\n        if (page > 0) setPage(page - 1);\n      },\n\n      hasPrevious: page === 0 ? false : true,\n\n      onNext() {\n        setPage(page + 1);\n      },\n\n      hasNext: true\n    },\n    children: listUser.map(value => cardItem(value))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListUser, \"v28IFLg+h3HHcvNFkt+pbEC12tY=\");\n\n_c = ListUser;\nexport default ListUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListUser\");","map":{"version":3,"sources":["/home/hoangdev/Desktop/front.test/src/modules/user/index.tsx"],"names":["React","Card","Page","useEffect","useState","getListUser","BaseService","GoogleMap","Marker","withGoogleMap","ListUser","listUser","setListUser","page","setPage","getUsers","setStatusLoading","res","status","body","e","console","error","cardItem","item","marginBottom","username","content","display","height","width","borderRadius","justifyContent","alignItems","backgroundColor","backgroundImage","color","fontWeight","fontSize","name","firstname","toUpperCase","marginLeft","textTransform","lastname","address","city","number","street","phone","id","MyMapComponent","props","lat","lng","isMarkerShown","url","onPrevious","hasPrevious","onNext","hasNext","map","value"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Card, Page} from '@shopify/polaris';\nimport {useEffect, useState} from \"react\";\nimport {getListUser, IResListUser} from \"../../api/User\";\nimport './index.scss';\nimport BaseService from \"../../commons/services/BaseService\";\nimport {GoogleMap, Marker, withGoogleMap} from \"react-google-maps\";\n\nconst ListUser: React.FC<any> = () => {\n\n    const [listUser, setListUser] = useState<IResListUser[]>([]);\n    const [page, setPage] = useState<number>(0);\n\n    const getUsers = async (page: number) => {\n        try {\n            BaseService.setStatusLoading(true);\n            const res = await getListUser(`https://fakestoreapi.com/users?page=${page}&limit=5`);\n            if (res.status === 200) {\n                BaseService.setStatusLoading(false)\n                setListUser(res.body);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    const cardItem = (item: IResListUser) => {\n        return (\n            <div key={item.id} style={{marginBottom: 10}}>\n                <Card sectioned title={item.username} actions={[{content: 'Check google map'}]}>\n                    <div style={{\n                        display: \"flex\"\n                    }}>\n                        <div style={{\n                            height: 75,\n                            width: 75,\n                            borderRadius: '50%',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            backgroundColor: '#0093E9',\n                            backgroundImage: 'linear-gradient(160deg, #0093E9 0%, #80D0C7 100%)',\n                            color: 'white',\n                            fontWeight: 'bold',\n                            fontSize: 24\n                        }}>\n                            <div>{item.name.firstname[0].toUpperCase()}</div>\n                        </div>\n                        <div style={{marginLeft: 8}}>\n                            <div style={{fontWeight: \"bold\", textTransform: 'capitalize'}}>{item.name.firstname} {item.name.lastname}</div>\n                            <div>{item.address.city}, {item.address.number} {item.address.street}</div>\n                            <div>{item.phone}</div>\n                        </div>\n                    </div>\n                </Card>\n            </div>\n        )\n    }\n\n    useEffect(() => {\n        getUsers(page)\n    }, [page]);\n\n    const MyMapComponent = withGoogleMap((props) =>\n        <GoogleMap\n            defaultZoom={8}\n            defaultCenter={{ lat: -34.397, lng: 150.644 }}\n        >\n            {props.isMarkerShown && <Marker position={{ lat: -34.397, lng: 150.644 }} />}\n        </GoogleMap>\n    )\n\n    return (\n        <Page\n            narrowWidth\n            breadcrumbs={[{content: 'Orders', url: '/register'}]}\n            title=\"List user\"\n            pagination={{\n                onPrevious() {\n                    if (page > 0) setPage(page - 1)\n                },\n                hasPrevious: (page === 0) ? false : true,\n                onNext() {\n                    setPage(page + 1)\n                },\n                hasNext: true,\n            }}\n        >\n            {\n                listUser.map((value) => cardItem(value))\n            }\n        </Page>\n    )\n}\n\nexport default ListUser;"]},"metadata":{},"sourceType":"module"}